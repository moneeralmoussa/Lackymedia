<?php

namespace TrimbleSoapBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TracedataRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ExpenseviewRepository extends EntityRepository
{
    public function findByMonth($employee_id, $begin, $end, $sort = 'time', $direction = 'asc') {
        $ret = $this->createQueryBuilder('td')
                ->andWhere("td.did IN (?1) AND td.type= 2 AND td.time >= ?2 AND td.time < ?3")
                ->setParameter(1, $employee_id)
                ->setParameter(2, $begin)
                ->setParameter(3, $end)
                ->orderBy("td.".$sort, $direction)
                ->getQuery()//;var_dump($ret->getSQL());die();
                ->getResult();
        return $ret;
    }

    public function findBegin($id,$employee_id,$sort = 'id', $direction = 'desc') {
        $ret = $this->createQueryBuilder('td')
                ->andWhere("td.id < ?1 AND td.did IN (?2) AND td.type= 1")
                ->setParameter(1, $id)
                ->setParameter(2, $employee_id)
                ->orderBy("td.".$sort, $direction)
                ->getQuery()//;var_dump($ret->getSQL());die();
                ->setMaxResults(1)
                ->getOneOrNullResult();
        return $ret;
    }

    public function findLastTracedataID() {
        $qb = $this->createQueryBuilder('td');
        $qb->select('MAX(td.tracedataId)')->setMaxResults(1);  
        return $qb->getQuery()->getSingleResult();
    }

    public function findByType($employee_id,$date,$type) {
       $begin= (new \Datetime($date))->format('Y-m-d');
       $end = (new \Datetime($date))->modify('+1 Day')->format('Y-m-d');
        $ret = $this->createQueryBuilder('td')
                ->andWhere("td.did IN (?1) AND td.type= ?2 AND td.time >= ?3 AND td.time < ?4 ")
                ->setParameter(1, $employee_id)
                ->setParameter(2, $type)
                ->setParameter(3, $begin)
                ->setParameter(4, $end)
                ->getQuery()//;var_dump($ret->getSQL());die();
                ->getResult();
        return $ret;
    }

}
