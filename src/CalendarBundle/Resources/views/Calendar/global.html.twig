{% extends 'base_new.html.twig' %}
{% set title = 'Betriebsurlaub' %}

{% block content %}
  <div class="row">
    <div class="grid-item col-xs-12">
      <div class="row">
        {% embed "partials/box.html.twig" with {'class': 'col-xs-12', 'title': 'Betriebsurlaub' } %}
            {% block content %}


                    {{ form_start(form) }}
                    <div class="col-xs-12">
                      <div class="form-group">
                        <label for="fromDate">Von</label>
                        <div class="input-group date" id="fromdate">
                          {{ form_widget(form.fromDate) }}
                          <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                          </span>
                        </div>
                      </div>
                    </div>
                    <div class="col-xs-12">
                      <div class="form-group">
                        <label for="toDate">Bis</label>
                        <div class="input-group date" id="todate">
                          {{ form_widget(form.toDate) }}
                          <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                          </span>
                        </div>
                      </div>
                    </div>
                    <div class="col-xs-12">
                      <div id="day-option-component"></div>
                    </div>
                    <div class="col-xs-12">
                      <div class="form-group">
                        {{ form_row(form.day) }}
                      </div>
                    </div>
                    <div class="col-xs-12">
                      <div class="form-group">
                        {{ form_row(form.reason) }}
                      </div>
                    </div>
                    <div class="col-xs-12">
                      <div class="form-group">
                        {{ form_row(form.sendInfo) }}
                      </div>
                    </div>
                    <div class="col-xs-12">
                      <div class="form-group">
                        {{ form_row(form.note) }}
                      </div>
                    </div>
                    <div class="col-xs-12">
                      <div class="form-group">
                        {{ form_row(form.group) }}
                      </div>
                    </div>
                    <div class="col-xs-12">
                      <div class="form-group">
                        {{ form_row(form.departments) }}
                      </div>
                    </div>
                    <div class="col-xs-12">
                      <div class="form-group">
                        {{ form_row(form.employee) }}
                      </div>
                    </div>

                  <input type="submit" value="{% trans %}Anlegen{% endtrans %}" class="btn btn-info pull-right" style="background-color:red"/>
                  {{ form_end(form) }}
			            <a href="{{ path('app') }}"><input type="button" href="{{ path('calendar_index') }}" value="{% trans %}Zurück{% endtrans %}" class="btn btn-info pull-right" style="background-color:green"/></a>
            {% endblock %}
        {% endembed %}
      </div>
    </div>
  </div>
{% endblock %}

{% block javascripts %}
    <link type="text/css" rel="stylesheet" href="/assets/tail.select/css/modern/tail.select-light-feather.css" />
    <script type="text/javascript" src="/assets/tail.select/js/tail.select-full.js"></script>
    <script type="text/javascript" src="/bundles/vehicle/js/moment-with-locales.min.js"></script>
    <script type="text/javascript" src="/bundles/vehicle/js/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript">
        $( document ).ready(function() {
					var CalendarBundle_Global_fromDate = $('#CalendarBundle_Global_CalendarBundle_Global_fromDate').datetimepicker({locale: 'de', ignoreReadonly: true, allowInputToggle: true});
					var CalendarBundle_Global_toDate = $('#CalendarBundle_Global_CalendarBundle_Global_toDate').datetimepicker({
						locale: 'de', ignoreReadonly: true, allowInputToggle: true, useCurrent: false //Important! See issue #1075
					});

          $("#CalendarBundle_Global_employee")[0].parentElement.hidden=true;
          $("#CalendarBundle_Global_departments")[0].parentElement.hidden=false;
        tail.select(".employee", {
              search: true,
              descriptions: true,
              animate: true,              // [0.3.0]      Boolean
              locale: 'de',
              multiSelectAll: true,
              });
        tail.select(".department", {
              search: true,
              descriptions: true,
              animate: true,              // [0.3.0]      Boolean
              locale: 'de',
              multiSelectAll: true,
              });
       tail.select(".type", {
              search: true,
              descriptions: true,
              animate: true,
              locale: 'de',
              multiSelectAll: false,
              });
        tail.select(".group", {
               search: false,
               descriptions: true,
               animate: true,
               locale: 'de',
               multiSelectAll: false,
               }).on("change", function(item, state){
                 if(item.key == 2)
                 {
                    $("#CalendarBundle_Global_employee")[0].parentElement.hidden=false;
                    $("#CalendarBundle_Global_departments")[0].parentElement.hidden=true;
                  }
                  else
                  {
                     $("#CalendarBundle_Global_employee")[0].parentElement.hidden=true;
                     $("#CalendarBundle_Global_departments")[0].parentElement.hidden=false;
                  }
                });
         });
    </script>




    	<script src="/bundles/newApp/moment-range.js"></script>
    	<script type="text/javascript">
    		window['moment-range'].extendMoment(moment);
    	</script>
    	<script type="text/javascript" src="/assets/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>
    	<!-- <script type="text/javascript" src="/bundles/absence/js/AbsenceDetailsClearing.js"></script>-->
    	<script type="text/javascript">
    		var employee_id = {{ app.user.employee.id }};
    		var publicHolidays = [];
    		var workday = [];
    		// function modalCountAbsenceDays() { 	console.log(moment($('#CalendarBundle_Global_fromDate').data("DateTimePicker").date())); 	console.log(moment($("#CalendarBundle_Global_toDate").data("DateTimePicker").date())); 	if ($('#absencebundle_absence_reason').val() == 7 ||
    		// $('#absencebundle_absence_reason').val() == 8 || $('#calendar_modal_absence_add_reason').val() == 9) { 		var days = countAbsenceDays(moment($('#CalendarBundle_Global_fromDate').data("DateTimePicker").date()),
    		// moment(moment($("#CalendarBundle_Global_toDate").data("DateTimePicker").date()).add(1, 'days').toISOString()), true); 	} else { 		var days = countAbsenceDays(moment($('#CalendarBundle_Global_fromDate').data("DateTimePicker").date()), moment($("#CalendarBundle_Global_toDate").data("DateTimePicker").date()).add(1,
    		// 'days')); 	} 	console.log(parseFloat(days).toFixed(1)); 	if ($('#edited').html() == '') { 		$('#CalendarBundle_Global_day').val(parseFloat(days).toFixed(1)); 	} else if ($('#CalendarBundle_Global_day').val() == parseFloat(days).toFixed(1)) {} else
    		// { 		swal({ 			text: "Vorschlag für Anzahl Tage: " + parseFloat(days).toFixed(1), 			type: 'warning', 			showCancelButton: true, 			confirmButtonText: 'Übernehmen', 			cancelButtonText: 'Ignorieren' 		}).then(function(result) { 			if (result.value)
    		// { 				$('#CalendarBundle_Global_day').val(parseFloat(days).toFixed(1)); 			} 		}); 	} }
    		$(document).on('change', 'input[type=radio]', function() {
    			calcDaysFromRadio();
    		});
    		$(document).ready(function() {
    			$.ajax({
    				url: "{{ path('calendar_ajaxgetvacationlock')}}",
    				success: function(data) {
    					var datasource = [];
    					_.each(data, function(value, key) {
    						_.each(value, function(v) {
    							datasource.push(new Date(v));
    						});
    					});
    					$(function() {
    						const queryString = window.location.search;
    						const urlParams = new URLSearchParams(queryString);
    						const CalendarBundle_Global_fromDateUrl =moment( urlParams.get('begin'));
    						const CalendarBundle_Global_toDateUrl =moment( urlParams.get('end'));

    						var CalendarBundle_Global_fromDate = $('#CalendarBundle_Global_fromDate').datetimepicker({locale: 'de',date: CalendarBundle_Global_fromDateUrl, ignoreReadonly: true, allowInputToggle: true, disabledDates: datasource});
    						var CalendarBundle_Global_toDate = $('#CalendarBundle_Global_toDate').datetimepicker({
    							locale: 'de',date: CalendarBundle_Global_toDateUrl, ignoreReadonly: true, allowInputToggle: true, disabledDates: datasource, useCurrent: false //Important! See issue #1075
    						});
    						generateDays(employee_id, moment(CalendarBundle_Global_fromDate.data("DateTimePicker").date()).format(), moment(CalendarBundle_Global_toDate.data("DateTimePicker").date()).add(1, 'days').format());
    						$("#CalendarBundle_Global_fromDate").on("dp.change", function(e) {
    							if($("#CalendarBundle_Global_toDate").data("DateTimePicker").date() < $("#CalendarBundle_Global_fromDate").data("DateTimePicker").date())
    							$("#CalendarBundle_Global_toDate").data("DateTimePicker").date($("#CalendarBundle_Global_fromDate").data("DateTimePicker").date());

    							$('#CalendarBundle_Global_toDate').data("DateTimePicker").minDate(e.date);
    							generateDays(employee_id, moment(e.date).format(), moment($("#CalendarBundle_Global_toDate").data("DateTimePicker").date()).add(1, 'days').format());
    						});
    						$("#CalendarBundle_Global_toDate").on("dp.change", function(e) {
    							if($("#CalendarBundle_Global_toDate").data("DateTimePicker").date() < $("#CalendarBundle_Global_fromDate").data("DateTimePicker").date())
    							$("#CalendarBundle_Global_toDate").data("DateTimePicker").date($("#CalendarBundle_Global_fromDate").data("DateTimePicker").date());
    							$('#CalendarBundle_Global_fromDate').data("DateTimePicker").maxDate(e.date);
    							generateDays(employee_id, moment($('#CalendarBundle_Global_fromDate').data("DateTimePicker").date()).format(), moment(e.date).add(1, 'days').format());
    						});
    					});
    				}
    			});
    			$("#absencebundle_absence_reason").on("change", function(e) {
    				generateDays(employee_id, moment($('#CalendarBundle_Global_fromDate').data("DateTimePicker").date()).format(), moment($('#CalendarBundle_Global_toDate').data("DateTimePicker").date()).add(1, 'days').format());
    			});
    		});
    	</script>











      <script>
      $(document).ready(function() {});
      var publicHolidays = [];
      function isPublicHoliday(start) {
      	if (publicHolidays.indexOf(start.format("YYYY-MM-DD")) > -1) {
      		return true;
      	}
      	if (start.day() == 6 || start.day() == 0  ||( jQuery.inArray( start.day(), workday ) != -1 )) {
      		return true;
      	}
      	return false;
      }

      function transformAbsenceDetailClearingToCheckbox(absenceDetailClearing) {
      	var output = 0;
      	switch (absenceDetailClearing.toString()) {
      		case "1.0":
      			output = 1;
      			break;
      		case "0.5":
      			output = 2;
      			break;
      		case "0.0":
      			output = 3;
      			break;
      	}
      	return output;
      }

      function calcDaysFromRadio() {
      	var days = 0.0;
      	_.each($('#day-option-component input[type=radio]:checked'), function(radiobutton) {
      		val = $(radiobutton).val();
      		switch (Number(val)) {
      			case 1:
      				days += 1.0;
      				break;
      			case 2:
      				days += 0.5;
      				break;
      			case 3:
      				days += 0.0;
      				break;
      		}
      	});
      	$('#CalendarBundle_Global_day').val(days);
      }

      function generateDays(employee, start, end) {

      	$.ajax({
      		url: "/calendar/publicholidays/json",
      		async: false,
      		success: function(data) {
      			_.forEach(data, function(value) {
      				if (value.publicHoliday == true) {
      					vstart = moment(value.start);
      					if ((vstart.isBefore(end) && vstart.isAfter(start)) || vstart.isSame(end) || vstart.isSame(start) ) {
      						publicHolidays.push(value.start);
      					}
      				}
      			});
      		}
      	});

      	var absencedetailsclearing = [];
      	$.ajax({
      		url: "/absence/absencedetailsclearing",
      		method: "POST",
      		async: false,
      		data: {
      			employee: employee,
      			start: start,
      			end: end,
      		},
      		success: function(data) {
      			absencedetailsclearing = data;
      		}
      	});

      	const range = moment().range(moment(start).startOf('day'), moment(end).startOf('day').subtract(1, 'day'));
      	const days = Array.from(range.by('days')).map(m => [m.format('YYYY-MM-DD'), m]);

      	if (range >= 0) {
      		var html_days = '';
      		var html_days_tab_panel = '';
      		var button_color = '';
      		var checked_holiday = '';
      		var checked_public_holiday = '';
      		_.forEach(days, function(value) {
      			if (isPublicHoliday(value[1])) {
      				button_color = 'btn-danger';
      				checked_public_holiday = 'checked="checked"';
      			} else {
      				button_color = 'btn-success';
      				checked_holiday = 'checked="checked"';
      			}

      			if (!isPublicHoliday(value[1])) {
      				var result = _.filter(absencedetailsclearing, function(item) {
      					return moment(item.date.date).format('YYYY-MM-DD') == value[0];
      				});

      				if (!!result[0]) {
      					var option_value = transformAbsenceDetailClearingToCheckbox(result[0].dayDetail);
      				}

      				if (option_value == 2) {
      					button_color = 'btn-half';
      				} else if (option_value == 3) {
      					button_color = 'btn-default';
      				}

      				html_days_tab_panel += '<div role="tabpanel" class="tab-pane" id="' + value[0] + '">\
      										<input type="radio" name="absenceoptions[' + value[0] + ']" ' + checked_holiday + ' value="1" ' + (option_value == 1 ? 'checked' : '') + '> Urlaub<br>\
      										<input type="radio" name="absenceoptions[' + value[0] + ']" value="2" ' + (option_value == 2 ? 'checked' : '') + '> Halber Tag<br>\
      										<input type="radio" name="absenceoptions[' + value[0] + ']" ' + checked_public_holiday + ' value="3" ' + (option_value == 3 ? 'checked' : '') + '> kein Urlaub\
      									</div>';
      			} else {
      				html_days_tab_panel += '<div role="tabpanel" class="tab-pane" id="' + value[0] + '">\
      											<p>Entweder ein Feiertag oder Wochenende!</p>\
      										</div>';
      			}
      			html_days += '<li  href="#' + value[0] + '" class="btn btn-flat ' + button_color + '" style="display:inline-block;" aria-controls="profile" role="tab" data-toggle="tab"><a href="#' + value[0] + '" style="color:#fff;" aria-controls="profile" role="tab" data-toggle="tab">' + moment(value[0]).format('DD.MM') + '</a></li>';
      			checked_public_holiday = '';
      			checked_holiday = '';
      		});
      		$('#day-option-component').html('	  <div class="panel panel-default" style="overflow:hidden;">\
      												  <div class="panel-body">\
      													  <label>Urlaubstage anpassen</label>\
      													<div class="form-group">\
      														<ul class="btn-group" role="group" aria-label="..." id="days" style="display:flex;flex:1;overflow: auto;padding-left:0">\
      														</ul>\
      													</div>\
      													<div class="tab-content" id="days-tab-panel"></div>\
      												  </div>\
      												</div>');
      		$(document).find('#days').html(html_days);
      		$(document).find('#days-tab-panel').html(html_days_tab_panel);
      	}
      	calcDaysFromRadio();
      }
      $(document).on('change', 'input[type=radio]', function() {

      	var active_button = $(document).find('#day-option-component .btn.active');

      	if (this.value == '1') {
      		if (active_button.hasClass('btn-default') || active_button.hasClass('btn-half')) {
      			active_button.removeClass('btn-default');
      			active_button.removeClass('btn-half');
      			active_button.addClass('btn-success');
      		}
      	} else if (this.value == '2') {
      		if (active_button.hasClass('btn-default') || active_button.hasClass('btn-success')) {
      			active_button.removeClass('btn-default');
      			active_button.removeClass('btn-success');
      			active_button.addClass('btn-half');
      		}
      	} else if (this.value == '3') {
      		if (active_button.hasClass('btn-success') || active_button.hasClass('btn-half')) {
      			active_button.removeClass('btn-success');
      			active_button.removeClass('btn-half');
      			active_button.addClass('btn-default');
      		}
      	}
      });
      </script>


{% endblock %}

{% block stylesheet %}
	<link rel="stylesheet" type="text/css" href="/bundles/vehicle/css/highslide.css"/>
	<link rel="stylesheet" type="text/css" href="/assets/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css"/>
	<style>
		.btn-half {
			height: 100%;
			background: linear-gradient(90deg, #e6e6e6 50%, #00a65a 50%)!important;
			border-color: #adadad!important;
		}
	</style>
{% endblock %}
