{% extends 'base_new.html.twig' %}
{% set title = 'Firmen Kalender' %}

{% block loading %}
	{% include 'AppBundle:Default:widgets/loading.html.twig' %}
{% endblock %}

{% block javascripts %}
<script src='/assets/moment/min/moment-with-locales.min.js'></script>
<script src='/assets/fullcalendar/dist/fullcalendar.js'></script>
<script src='/assets/fullcalendar-scheduler/dist/scheduler.js'></script>
<script src='/assets/fullcalendar/dist/locale/de.js'></script>
<script src="/assets/sweetalert2/dist/sweetalert2.all.min.js"></script>
<script src="/bundles/newApp/jquery.table2excel.js"></script>
<script>
var publicHolidays = [];
function isPublicHoliday(start) {
    if(publicHolidays.indexOf(start.format("YYYY-MM-DD")) > -1) {
        return true;
    }
    if(start.day()==6 || start.day()==0) {
        return true;
    }
    return false;
}
function countAbsenceDays(start,end,noPublicHolidays=false) {
	count = 0;
	$.ajax({
		url: "{{ path('calendar_jsonpublicholidays')}}",
		async: false,
		success: function(data) {
			_.forEach(data, function(value) {
			if(value.publicHoliday == true){
				vstart = moment(value.start);
				if(!(vstart.isBefore(end) || vstart.isAfter(start))){
				count++;
				}
			}
			});
		}
	});
	var ret=0;
	ret -= count;
	while(start < end) {
		if(noPublicHolidays) {
			ret++;
		} else if(!isPublicHoliday(start)) {
			ret++;
		}
		start.add(1, 'd');
	}
	return ret;
}
$(document).ready(function() {
    var employeeID;
    var absenceID;
    var fromDate;
    var toDate;
    var g_currentyear = moment().year();
    var cal = $('#calendar').fullCalendar({
        // defaultDate: moment(new Date()),
		customButtons: {
		  export: {
			text: 'Export',
			click: function() {

				$("body").append("<div class='exportTable'></div>");
				$('.exportTable').hide();
				$('#calendar table:first').clone().appendTo('.exportTable');
				$('.exportTable').find('.fc-time-area').remove();
				$('.exportTable').find('.fc-divider.fc-col-resizer').remove()
				$(".exportTable table").table2excel({
				  exclude: "",
				  name: "Urlaubstage",
				  filename: "export", //do not include extension
				  fileext: ".xls" // file extension
				});

				$(".exportTable").remove();
			}
		  }
		},
        refetchResourcesOnNavigate: true,
        header: {
            left: 'today prev,next', //left: 'today prev,next export',
            center: 'title',
            right: 'timelineMonth,timelineYear'
        },
        height: 'parent',
        themeSystem: 'bootstrap3',
        defaultView: 'timelineYear',
        schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
        resourceGroupField: 'department',
        resourceOrder: 'department,employee,education_year',
        locale: 'de',
        displayEventTime: false,
        nowIndicator: true,
        eventOverlap:function(stillEvent, movingEvent){
            return (stillEvent.rendering && stillEvent.rendering == 'background')
        },
        businessHours: true,
        selectable: true,
        selectHelper: true,
        resourcesInitiallyExpanded: false,
        buttonText: {
        	year:    'Jahr',
        },
        select: function(start, end, event, view, resource) {
            employeeID = resource.id;
            absenceID = event.id;
            fromDate = moment(start).toISOString()
            toDate = moment(end).toISOString();
            var days = countAbsenceDays(moment(start),moment(end));
            $('#calendar_modal_absence_add_day').val(parseFloat(days).toFixed(1));
            $('#calendar_modal_absence_add_reason').val('');
            $('#calendar_modal_absence_add_status').val('');
            $('#calendar_modal_absence_add_note').val('');
            $('#edited').text('');
            $('.modal-title').html('Abwesenheit eintragen - '+ resource.employee);
            $('.modal-subtitle').html(start.format('L') + ' - ' + end.subtract('1', 'days').format('L'));
            $('#modal').modal();
            $('#calendar').fullCalendar('unselect');
        },
        eventClick:  function(event, jsEvent, view) {
            $('#modal .delete').removeClass('hidden');
            // employeeID = event.resourceIds[0];
            absenceID = event.id;
            fromDate = moment(event.start).toISOString()
            toDate = moment(event.end).toISOString();
            $.ajax({
                type: "POST",
                url: "{{ path('calendar_ajaxgetabsence')}}",
                data: {
                    id: event.id
                },
                success: function(r){
                    // employee = $('#calendar').fullCalendar( 'getResourceById', event.resourceIds[0] ).employee;

              swal({
                text: "Anzahl Tage:  "+r['days']+"      Kommentar:  "+r['note'],
                buttons: false,
                timer: 3000,
            	});
                    $('.modal-title').html(event.title + ' - ' + employee);
                    $('.modal-subtitle').html(event.start.format('L') + ' - ' + event.end.subtract('1', 'days').format('L'));
                    parseFloat($('#calendar_modal_absence_add_day').val(r['days'])).toFixed(1);
                    $('#calendar_modal_absence_add_reason').val(r['reason']);
                    $('#calendar_modal_absence_add_status').val(r['status']);
                    $('#calendar_modal_absence_add_note').val(r['note']);
                    $('#edited').text("Zuletzt bearbeitet: von "+r['approvedBy']+" am "+ moment(r['createdat']['date']).format("DD.MM.YYYY HH:mm"));
                    $('#modal').modal();
                }
            });

            $(".delete").click(function(){
				var pid = event.id;
				swal({
					title: 'Abwesenheit löschen',
					text: "Sind Sie sich sicher?",
					type: 'warning',
					showCancelButton: true,
					confirmButtonColor: '#3085d6',
					cancelButtonColor: '#d33',
					cancelButtonText: 'Nein',
					confirmButtonText: 'Ja'
				}).then((result) => {
					if (result.value) {
						url = '{{path('absence_delete', { 'id': 0}) }}';
						url = url.replace("0",pid);
						console.log(url);
						$.ajax({
							url: url,
							type: 'POST',
							data: {
								"_method": "DELETE",
								"form[_token]": $("#csrf_token").data("token")   // passed csrf token here
							},
							success: function(result) {
								$('#modal').modal('hide');
								swal(
									'Gelöscht!',
									'Diese Abwesenheit wurde gelöscht.',
									'success'
								)
								cal.fullCalendar('refetchEvents');
							},
							error: function(e){
								swal(
									'Fehler!',
									'Ein Fehler ist aufgetreten.',
									'error'
								)
								console.log(e.responseText);
							}
						});
					}
				})
            });
        },
        eventDrop: function(event, delta, revertFunc) {
            // employeeID = event.resourceIds[0];
            absenceID = event.id;
            fromDate = moment(event.start).toISOString()
            toDate = moment(event.end).toISOString();
            $.ajax({
                type: "POST",
                url: "{{ path('calendar_ajaxgetabsence')}}",
                data: {
                    id: event.id
                },
                success: function(r){
                    // employee = cal.fullCalendar( 'getResourceById', event.resourceIds[0] ).employee;
                    $('.modal-title').html(event.title + ' - ' + employee);
                    $('.modal-subtitle').html(event.start.format('L') + ' - ' + event.end.subtract('1', 'days').format('L'));
                    parseFloat($('#calendar_modal_absence_add_day').val(r['days'])).toFixed(1);
                    $('#calendar_modal_absence_add_reason').val(r['reason']);
                    $('#calendar_modal_absence_add_status').val(r['status']);
                    $('#calendar_modal_absence_add_note').val(r['note']);
                    $('#edited').text("Zuletzt bearbeitet: von "+r['approvedBy']+" am "+ moment(r['createdat']['date']).format("DD.MM.YYYY HH:mm"));
                    $('#modal').modal();
                    modalCountAbsenceDays();
                }
            });
        },
        eventResize: function(event, delta, revertFunc) {
            // employeeID = event.resourceIds[0];
            absenceID = event.id;
            fromDate = moment(event.start).toISOString()
            toDate = moment(event.end).toISOString();
            $.ajax({
                type: "POST",
                url: "{{ path('calendar_ajaxgetabsence')}}",
                data: {
                    id: event.id
                },
                success: function(r){
                    // employee = cal.fullCalendar( 'getResourceById', event.resourceIds[0] ).employee;
                    $('.modal-title').html(event.title + ' - ' + employee);
                    $('.modal-subtitle').html(event.start.format('L') + ' - ' + event.end.subtract('1', 'days').format('L'));
                    parseFloat($('#calendar_modal_absence_add_day').val(r['days'])).toFixed(1);
                    $('#calendar_modal_absence_add_reason').val(r['reason']);
                    $('#calendar_modal_absence_add_status').val(r['status']);
                    $('#calendar_modal_absence_add_note').val(r['note']);
                    $('#edited').text("Zuletzt bearbeitet: von "+r['approvedBy']+" am "+ moment(r['createdat']['date']).format("DD.MM.YYYY HH:mm"));
                    $('#modal').modal();
                    modalCountAbsenceDays();
                }
            });
        },
        resourceRender: function(resourceObj, labelTds, bodyTds) {
			var ids = resourceObj.id;
			if(ids.substring(0,4) == 'alle'){
				resourceObj.id = resourceObj.id.substring(4);
			}
            labelTds.find('.fc-cell-content').each(function(){
                if (!$(this).attr('data-listener')) {
                    $(this).on('click', function(){
                        window.open('/calendar/employee/'+resourceObj.id+'/show','_blank');
                    });
                }
            });
        },
        eventRender: function(event, element, view) {
            if (event.publicHoliday) {
                publicHolidays.push(event.start.format("YYYY-MM-DD"));
            }
            if (event.icon && event.title === 'Urlaub') {
				event.backgroundColor = '#2ecc71';
                element.css('background-color','#2ecc71');
            }
            if(event.icon){
                element.find(".fc-title").prepend("<i class='fa fa-"+event.icon+"'></i> ");
            }

			if(!_.isEmpty(event.halfDays)){
				element.addClass('fc-halfdays');
			}

			i = 0;
			_.each(event.halfDays, function(item){
				index = (new moment(item.date.date)).diff(event.start, 'days');
				element.append('<div class="fc-halfdays-bg"></div>');
				left = index * view.slotWidth;
				diff = (new moment(event.end)).diff(event.start, 'days');
				elementlength = diff * view.slotWidth;
				right = elementlength - left - view.slotWidth;
				element.find('.fc-halfdays-bg:eq('+i+')').css({
					'left' : left + 'px',
					'right' : right + 'px',
					'background' : 'linear-gradient(to right bottom, '+ event.backgroundColor +' 50%, #BDC3C7 50%)',
				});
				i++;
			});
        },
        viewRender: function(view,element) {
			if ($('.fc-now-indicator').position()) {
				$($('.fc-scroller')[1]).scrollLeft($('.fc-now-indicator').position().left-100);
			}
			if ($('.fc-today').position()) {
				$($('.fc-scroller')[1]).scrollLeft($('.fc-today').position().left-100);
			}

			$('.fc-expander').parent().on('click', function(e) {

				if (!$(e.target).is('.fc-expander')) {
					$(this).find('.fc-expander').trigger('click');
					$('.fc-time-area tbody > tr, .fc-resource-area tbody > tr').hover(
						function() {
							$('.fc-resource-area tbody').find('[data-resource-id="' + $(this).data('resource-id') + '"]').css( "background-color", "rgba(0, 0, 0, 0.2)");
							$('.fc-time-area tbody').find('[data-resource-id="' + $(this).data('resource-id') + '"]').css( "background-color", "rgba(0, 0, 0, 0.2)");
						}, function() {
							$('.fc-resource-area tbody').find('[data-resource-id="' + $(this).data('resource-id') + '"]').css( "background-color", "transparent");
							$('.fc-time-area tbody').find('[data-resource-id="' + $(this).data('resource-id') + '"]').css( "background-color", "transparent");
						}
					);

					var month = new moment().year(g_currentyear).month($('.fc-scroller-clip > .fc-following').first().text());
					currentMonth = month.format('MMMM')

					var ids = [];
					_.each($('.fc-resource-area tr[data-resource-id]'), function(value){
						ids.push($(value).data('resource-id'));
						$('.fc-head tbody th:eq(6) .fc-cell-text').html('Rest<br/>'+month.format('MMMM'));
					});

					$.ajax({
						type: "POST",
						url: "{{ path('employee_remainingmtl')}}",
						data: {
						date: month.toISOString(),
						ids:ids
						},
						success: function(resources){
						_.each(resources, function(resource){
							$('.fc-resource-area tr[data-resource-id='+resource.id+'] td:eq(6) .fc-cell-text').text(resource.remainingmtl);
						});
						}
					});
				}
			});

            $('.fc-prev-button, .fc-next-button').on('click', function(){
				g_currentyear = view.start.year();
				console.log(g_currentyear);
				console.log(moment().year(g_currentyear).format('YYYY'));
				console.log(moment().year(g_currentyear).subtract(1, 'year').format('YYYY'));
				$('.fc-resource-area').eq(0).find('.fc-cell-content').eq(2).text('Rest\n' + moment().year(g_currentyear).subtract(1, 'year').format('YYYY'));
				$('.fc-resource-area').eq(0).find('.fc-cell-content').eq(3).text('Urlaub\n' + moment().year(g_currentyear).format('YYYY'));
				$('.fc-resource-area').eq(0).find('.fc-cell-content').eq(7).text('Rest\n' + moment().year(g_currentyear).format('YYYY'));
            });

			$('.fc-day, .fc-day-top').hover(function() {
				var myEm = $(this).attr('data-date');
				console.log(myEm);
				$('.fc-day-top[data-date = '+myEm+'] .fc-day-number').addClass('on-hover');
			}, function() {
				var myEm = $(this).attr('data-date');
				$('.fc-day-top[data-date = '+myEm+'] .fc-day-number').removeClass('on-hover');
			});

        },
        resourceAreaWidth: "50%",
        editable: true,
        resourceColumns: [
            {
                labelText: 'ID',
                field: 'pNumber'
            }, {
                labelText: 'Urlaub\ngesamt',
                field: 'holiday'
            }, {
                labelText: 'Rest\n'+moment().year(g_currentyear).subtract(1, 'year').format('YYYY'),
                field: 'remainingOld',
                render: function(resource, el) {
                    el.attr('data-listener',true)
                    el.on('click', function(e){
                        swal({
                            text: "Resturlaub anpassen",
                            type: 'warning',
                            input: 'text',
                            inputValue: parseFloat(el.find('.fc-cell-text').text()).toFixed(1),
                            showCancelButton: true,
                            confirmButtonText: 'Übernehmen',
                            cancelButtonText: 'Ignorieren'
                        }).then(function(result){
                            if(result.value) {
                                var value = result.value.replace(',','.');
                                el.find('.fc-cell-text').text(parseFloat(value).toFixed(1));
                                $.ajax({
                                    type: "POST",
                                    url: "{{ path('employee_daysofvacation_update')}}",
                                    data: {"employee":resource.id,"year":g_currentyear,"remaining":value},
                                    success: function(r){
                                        console.log(r);
                                    }
                                });
                            }
                        });
                    });
                },
            }, {
                labelText: 'Urlaub\n'+moment().format('YYYY'),
                field: 'holidayNew',
            }, {
                labelText: 'Abzügl.\nS-Ect.',
                field: 'substract',
                render: function(resource, el) {
                    el.attr('data-listener',true)
                    el.on('click', function(e){
                        swal({
                            text: "Urlaubsabzug anpassen",
                            type: 'warning',
                            html: '<div class="swal2-contentwrapper"><h2 class="swal2-title" id="swal2-title"></h2><div id="swal2-content" class="swal2-content" style="display: block;">Urlaubsabzug anpassen</div></div>' +
                            '<label>Tage: </label><br/><input type="number" id="swal-input1" class="swal2-input"><br/>' +
                            '<label>Kommentar: </label><input id="swal-input2" class="swal2-input">',
                            focusConfirm: false,
                            showCancelButton: true,
                            confirmButtonText: 'Übernehmen',
                            cancelButtonText: 'Ignorieren',
                            preConfirm: function () {
                                return new Promise(function (resolve) {
                            		resolve([
                                    	$('#swal-input1').val(),
                                    	$('#swal-input2').val()
                            		])
                                })
                            }
                        }).then(function (result) {
                                var value = parseFloat(result.value[0].replace(',','.'));
								// el.find('.fc-cell-text').text(parseFloat(value[0]).toFixed(1));
								$.ajax({
									type: "POST",
									url: "{{ path('employee_daysofvacation_update')}}",
									data: {
										employee: resource.id,
										year:     cal.fullCalendar('getDate').year(),
										substract:value,
										comment:  result.value[1],
									},
									success: function(r){
										console.log(r);
										cal.fullCalendar('refetchResources');
									}
								});
                            }).catch(swal.noop)
                            $('.swal2-popup #swal-input1').val(parseFloat(el.find('.fc-cell-text').text()).toFixed(1));
                            $('.swal2-popup #swal-input2').val(cal.fullCalendar( 'getResourceById', resource.id ).comment);

                    });
                },
            }, {
                labelText: 'Zuzügl.\nS-Ect.',
                field: 'additional',
                render: function(resource, el) {
                    el.attr('data-listener',true)
                    el.on('click', function(e){
                        swal({
                            text: "Urlaubszuzug anpassen",
                            type: 'warning',
                            html: '<div class="swal2-contentwrapper"><h2 class="swal2-title" id="swal2-title"></h2><div id="swal2-content" class="swal2-content" style="display: block;">Urlaubszuzug anpassen</div></div>' +
							'<label>Tage: </label><br/><input type="number" id="swal-input1" class="swal2-input"><br/>' +
							'<label>Kommentar: </label><input id="swal-input2" class="swal2-input">',
                            focusConfirm: false,
                            showCancelButton: true,
                            confirmButtonText: 'Übernehmen',
                            cancelButtonText: 'Ignorieren',
                            preConfirm: function () {
                                return new Promise(function (resolve) {
									resolve([
										$('#swal-input1').val(),
										$('#swal-input2').val()
									])
								})
							}
                        }).then(function (result) {
							var value = parseFloat(result.value[0].replace(',','.'));
							$.ajax({
								type: "POST",
								url: "{{ path('employee_daysofvacation_update')}}",
								data: {
									employee: resource.id,
									year:     cal.fullCalendar('getDate').year(),
									additinal:value,
									comment2:  result.value[1],
								},
								success: function(r){
									console.log(r);
									cal.fullCalendar('refetchResources');
								}
							});
                        }).catch(swal.noop)

						$('.swal2-popup #swal-input1').val(parseFloat(el.find('.fc-cell-text').text()).toFixed(1));
						$('.swal2-popup #swal-input2').val(cal.fullCalendar( 'getResourceById', resource.id ).comment2);
                    });
                },
            }, {
                labelText: 'Rest\nmtl.',
                field: 'remainingmtl'
            }, {
                labelText: 'Rest\n'+moment().format('YYYY'),
                field: 'remaining'
            },
		{% if is_granted('ROLE_ADMIN') %}
			{
				labelText: 'Restgehaltsanspruch\n{{date()|date('t.m.Y')}}',
				field: 'salaryRemainingDaysOfVacation'
			},
		{% endif %}
            {
                labelText: 'Mitarbeiter',
                field: 'employee',
                width: '150'
            }, {
                labelText: 'Adresse',
                field: 'address',
                width: '250'
            }
        ],
        resources: {
            url: "{{ path('azubijsonEmployee')}}",
            error: function() {
            }
        },
        eventSources: [
            {
                url: "{{ path('absence_json_calendar')}}",
            }, {
                url: "{{ path('calendar_jsonpublicholidays')}}",
            },
        ]
    });

    function modalCountAbsenceDays() {
        var days = countAbsenceDays(moment(fromDate),moment(toDate));

        console.log(parseFloat(days).toFixed(1));
        if($('#edited').html() == '') {
            $('#calendar_modal_absence_add_day').val(parseFloat(days).toFixed(1));
        } else if ($('#calendar_modal_absence_add_day').val() == parseFloat(days).toFixed(1)) {
        } else {
            swal({
                text: "Vorschlag für Anzahl Tage: "+parseFloat(days).toFixed(1),
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Übernehmen',
                cancelButtonText: 'Ignorieren'
            }).then(function(result){
                if(result.value) {
                    $('#calendar_modal_absence_add_day').val(parseFloat(days).toFixed(1));
                }
            });
        }
    }

    $('#calendar_modal_absence_add_reason').change(function(){
        modalCountAbsenceDays();
    });

    $('.absence-add').submit(function(e) {
        e.preventDefault();
        var url = "{{ path('calendar_ajax') }}";
        var day = parseFloat($('#calendar_modal_absence_add_day').val()).toFixed(1);

        if($('#calendar_modal_absence_add_reason').val()){
            var reason = $('#calendar_modal_absence_add_reason').val();
        } else {
            swal({
                text: "Bitte wählen Sie einen Abwesenheitsgrund!",
                type: 'warning',
            });
            return false;
        }

        if($('#calendar_modal_absence_add_status').length){
            if($('#calendar_modal_absence_add_status').val()){
                var status = $('#calendar_modal_absence_add_status').val();
            } else {
                swal({
                    text: "Bitte wählen Sie einen Status!",
                    type: 'warning',
                });
                return false;
            }
        }
        var note = $('#calendar_modal_absence_add_note').val();
        var formSerialize = [];
        formSerialize.push({name: 'reason', value: reason});
        formSerialize.push({name: 'status', value: status});
        formSerialize.push({name: 'note', value: note});
        formSerialize.push({name: 'day', value: day});
        formSerialize.push({name: 'employee', value: employeeID});
        formSerialize.push({name: 'absence', value: absenceID});
        formSerialize.push({name: 'fromDate', value: fromDate});
        formSerialize.push({name: 'toDate', value: moment(toDate).toISOString()});

        $.ajax({
            type: "POST",
            url: url,
            data: formSerialize,
            success: function(r){
                $('#modal').modal('hide');
                $('#modal').on('hidden.bs.modal', function(){
                    $(this).find('form')[0].reset();
                });
                $('#calendar').fullCalendar( 'refetchEvents' );
            }
        });
    });

    var currentMonth = $('.fc-scroller-clip > .fc-following').first().text();
    var currentIds = [];

    $(".fc-scroller").scroll(function(){
    	var month = new moment().year(g_currentyear).month($('.fc-scroller-clip > .fc-following').first().text());
    	if(month.format('MMMM') != currentMonth){
        	currentMonth = month.format('MMMM')

			var ids = [];
			_.each($('.fc-resource-area tr[data-resource-id]'), function(value){
				ids.push($(value).data('resource-id'));
				$('.fc-head tbody th:eq(6) .fc-cell-text').html('Rest<br/>'+month.format('MMMM'));
			});

			$.ajax({
				type: "POST",
				url: "{{ path('employee_remainingmtl')}}",
				data: {
					date: month.toISOString(),
					ids:ids
				},
				success: function(resources){
					_.each(resources, function(resource){
						$('.fc-resource-area tr[data-resource-id='+resource.id+'] td:eq(6) .fc-cell-text').text(resource.remainingmtl);
					});
				}
			});
		}
    });

    $('#modal').on('hidden.bs.modal', function(){
        $('#modal .delete').addClass('hidden');
    });
});
</script>
{% endblock %}

{% block stylesheet %}
<link href='/assets/fullcalendar/dist/fullcalendar.css' rel='stylesheet' />
<link href='/assets/fullcalendar-scheduler/dist/scheduler.css' rel='stylesheet' />
<link href="/assets/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet">
<style>
	.fc-halfdays-bg{
		z-index: 1;
		position: absolute;
		top: 0;
		bottom: 0;
	}
	.fc-event .fc-bg{
		opacity: 0;
	}
	.fc-view-container .fc-resource-area tr{
		cursor: pointer;
	}
	.fc-resource-area tr td:nth-child(3):hover,
	.fc-resource-area tr td:nth-child(5):hover,
	.fc-resource-area tr td:nth-child(6):hover {
		background: #ccc;
	}
	.fc-ltr .fc-resource-area tr[data-resource-id] > td:nth-last-child(2),
	.fc-ltr .fc-resource-area tr[data-resource-id] > td:last-child {
		text-align: left!important;
	}
	.fc-ltr .fc-resource-area tr[data-resource-id] > *{
	text-align: right!important;
	}
	.on-hover{
		background: red;
		opacity: 0.4;
	}
	.fc-time-area tr:hover {
		background: rgba(0, 0, 0, 0.2);
	}
	.table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th, .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {
		/*border: 1px solid #ccc;*/
		border: 1px solid #000;
	}
	.fc-highlight{
	background: green;
	}
	.fc-timeline .fc-head .fc-cell-content{
	white-space: pre-line;
	}
</style>
{% endblock %}

{% block modalcontent %}
	{% include 'CalendarBundle:Calendar:partials/modalabsenceadd.html.twig' %}
{% endblock %}

{% block content %}
	<div style="height: calc(100vh - 142px);margin-top:20px;background-color: white;position:relative;">
		<div id="calendar"></div>
	</div>
{% endblock %}
