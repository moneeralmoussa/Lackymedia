{% extends 'base_new.html.twig' %}
{% set title = 'Arbeitszeit Monat'|trans %}
{% block stylesheet %}
    <link rel="stylesheet" type="text/css" href="/bundles/vehicle/css/bootstrap-datetimepicker.min.css" />
    <style>
    @media print
      {
      html, body { height: auto; }
      .dt-print-table, .dt-print-table thead, .dt-print-table th, .dt-print-table tr {border: 0 none !important;}
      }
    </style>
{% endblock %}
{% block javascripts %}
    <script type="text/javascript" src="/bundles/vehicle/js/moment-with-locales.min.js"></script>
    <script type="text/javascript" src="/bundles/vehicle/js/bootstrap-datetimepicker.min.js"></script>
    <script src="/bundles/newApp/chart.js"></script>
    <script type="text/javascript">
    var pauseHours=0;
    var sumArbeitszeit=0;
    var breaks =[];
    var Kranktag =[];
    var Arbeitszeit =[];
            {% for workingtime in workingtimes %}
             breaks.push("{{  (workingtime.sum_breaktime*-1) }}");
             pauseHours +=  {{  (workingtime.sum_breaktime*-1) }};
             sumArbeitszeit += {{ (workingtime.sum_workingtime) }};
             Arbeitszeit.push("{{  (workingtime.sum_workingtime) }}");
            {% endfor %}
        $( document ).ready(function() {
            $('#datetimepicker1').datetimepicker({
                locale: 'de',
                format: 'MMM YYYY',
                defaultDate: '{{ Date|date('n') }}/1/{{ Date|date('Y') }}',
                date: '{{ Date|date('n') }}/1/{{ Date|date('Y') }}',
            });
            $('#datetimepicker1').on('dp.change', function(e){
             window.location.replace(e.date.format('YYYY-MM-DD'));
            });
        });
    function sundaysInMonth( m, y ) {
                       var days = new Date( y,m,0 ).getDate();
                       var saturdays = [ 7 - (new Date( m +'/01/'+ y ).getDay()) ];
                       var sundays = [ 8 - (new Date( m +'/01/'+ y ).getDay()) ];
                          for ( var i = sundays[0] + 7; i < days; i += 7 ) {
                                sundays.push( i );
                           }
                       sundays.push( saturdays[0] );
                          for ( var i = saturdays[0] + 7; i < days; i += 7 ) {
                             sundays.push( i );
                          }
                       return sundays.length;
                   }
$(document).ready(function() {
    var table =  $('#workingdays').DataTable( {
        paging:   false,
        dom: 'Bfrtip',
        select: true,
        order:[[1,'asc']],
        autoWidth: true,
        buttons: [
            { extend: 'pageLength',footer: true, text: 'Zeige <i class="fa fa-cog fa-spin fa-1x fa-fw" aria-hidden="true"></i>'},
            { extend: 'print',
            footer: true,
            text: 'Drucken <i class="fa fa-print"></i>',
            footer: true,
            title: '<img src="https://giesker-laakmann.de/images/logo.png" style="width: 30%;" align="right"> <div class="table-responsive" width="30%"> <table class="table table-striped table-hover table-condensed"><tr><td> Name:  {{ employee.Fname }} </td>  <td> {{ Date|date("F Y") }}</td>   <td>{{ "now"|date("m/d/Y") }}</td></tr><tr><td> Nr: {{ employee.trimbleId }}</td> <td></td><td>{{ "now"|date("H:i") }}</td></tr></table></div>',
             },
            {
                extend:    'copyHtml5',
                text:      'Kopieren <i class="fa fa-files-o"></i>',
                titleAttr: 'Copy',
                title: '<div class="table-responsive" width="30%"> <table class="table table-striped table-hover table-condensed"><tr><td> Name:  {{ employee.Fname }} </td>  <td> {{ Date|date("F Y") }}</td>   <td>{{ "now"|date("m/d/Y") }}</td></tr><tr><td> Nr: {{ employee.trimbleId }}</td> <td></td><td>{{ "now"|date("H:i") }}</td></tr></table></div>',
                footer: true,
            },
            {
                extend:    'excelHtml5',
                text:      'Excel Exportieren <i class="fa fa-file-excel-o"></i>',
                titleAttr: 'Excel',
                footer: true,
            },
            {
                extend:    'csvHtml5',
                text:      'CSV Exportieren <i class="fa fa-file-text-o"></i>',
                titleAttr: 'CSV',
                footer: true,
            },
            {
                extend:    'pdfHtml5',
                text:      'PDF Exportieren <i class="fa fa-file-pdf-o"></i>',
                titleAttr: 'PDF',
                footer: true,
                title: '{{ employee.Fname }}  -  {{ Date|date("F Y") }}',
            }
          ],
          "footerCallback": function ( row, data, start, end, display ) {
            var api = this.api(), data;

            // Total over all pages
          for(i=8 ;i<=17 ;i++)
            $( api.column( i ).footer() ).html( parseFloat((
               api
                .column( i )
                .data().reduce(function(a, b) {
                  var x = parseFloat(a) || 0;
                  var y = parseFloat(b) || 0;
                  return x + y;
                }, 0)).toFixed(2))
            );
             function FGsum(id)
                  {
                      sum = 0 ;
                        for(i=0;i< api.column(id).data().length ; i++)
                      { if (api.column(id).data()[i].length > 1)
                        sum = sum+parseFloat(api.column(id).data()[i]);}
                      return sum;
                  }
              function FGsumHoliday(id)
              {
                      sum = 0 ;
                        for(i=0;i< api.column(id).data().length ; i++)
                      { if (api.column(id).data()[i].length > 1)
                        sum ++;}
                      return sum;
               }
                  $("#spanWochenEnde").html(sundaysInMonth("{{ Date|date('m') }}","{{ Date|date('Y') }}" )* 24 +" Stunden");
                  $("#WochenEnde").html(sundaysInMonth( "{{ Date|date('m') }}","{{ Date|date('Y') }}") * 24 +" Stunden");
                  $("#divuWochenEnde").css("width",(sundaysInMonth("{{ Date|date('m') }}","{{ Date|date('Y') }}") * 24 * 100 )/(breaks.length*24)+'%');
                  $("#publicHolidaysspan").html(FGsumHoliday(2) * 24 +" Stunden ");
                  $("#publicHolidaysdiv").css("width",(FGsumHoliday(2) * 24 * 100 )/(breaks.length*24)+'%');
                  $("#pausespan").html(pauseHours +" Stunden");
                  $("#pausediv").css("width",(pauseHours * 100 )/30+'%');
                  $("#Arbeitszeitspan").html(sumArbeitszeit.toFixed(2) +" Stunden");
                  $("#Arbeitszeitdiv").css("width",(sumArbeitszeit * 100 )/200+'%');
                  $("#spasensumme2").html(pauseHours +" Stunden");
                  $("#spanurlaubid").html(FGsum(13) +" Stunden");
                  $("#divurlaubid").css("width",(FGsum(13))+'%');
                  $("#spankrankid").html(FGsum(12)   +" Stunden");
                  $("#divkrankid").css("width",FGsum(12) * 100/(api.column(5).data().length*24)+'%');
        }
        });
    } );

$( document ).ready(function() {
$(function () {
  'use strict';
  // Get context with jQuery - using jQuery's .get() method.
  var salesChartCanvas = $('#salesChart').get(0).getContext('2d');
  // This will get the first returned node in the jQuery collection.
  var salesChart = new Chart(salesChartCanvas);
  var labelsArray= new Array();

 for(var x=1; x<=Arbeitszeit.length ;x++)
  {labelsArray[x-1]=x ;}
  var salesChartData = {
    labels  : labelsArray,
    datasets: [
      {
        label               : 'Arbeitszeit',
        fillColor           : 'rgb(0, 192, 239)',
        strokeColor         : 'rgb(0, 192, 239)',
        pointColor          : 'rgb(0, 192, 239)',
        pointStrokeColor    : '#c1c7d1',
        pointHighlightFill  : '#fff',
        pointHighlightStroke: 'rgb(0, 192, 239)',
        data                : Arbeitszeit
      },
      {
        label               : 'Pause',
        fillColor           : '#e14936',
        strokeColor         : '#e14936',
        pointColor          : '#e14936',
        pointStrokeColor    : '#c1c7d1',
        pointHighlightFill  : '#fff',
        pointHighlightStroke: 'rgb(0, 192, 239)',
        data                : breaks
      },
      {
        label               : 'Krank',
        fillColor           : 'rgb(221, 75, 57)',
        strokeColor         : 'rgb(221, 75, 57)',
        pointColor          : '#3b8bba',
        pointStrokeColor    : 'rgb(221, 75, 57)',
        pointHighlightFill  : '#fff',
        pointHighlightStroke: 'rgb(221, 75, 57)',
        data                : Kranktag
      },
      ]
  };
  var salesChartOptions = {
    // Boolean - If we should show the scale at all
    showScale               : true,
    // Boolean - Whether grid lines are shown across the chart
    scaleShowGridLines      : true,
    // String - Colour of the grid lines
    scaleGridLineColor      : 'rgba(0,0,0,.05)',
    // Number - Width of the grid lines
    scaleGridLineWidth      : 1,
    // Boolean - Whether to show horizontal lines (except X axis)
    scaleShowHorizontalLines: true,
    // Boolean - Whether to show vertical lines (except Y axis)
    scaleShowVerticalLines  : true,
    // Boolean - Whether the line is curved between points
    bezierCurve             : true,
    // Number - Tension of the bezier curve between points
    bezierCurveTension      : 0.3,
    // Boolean - Whether to show a dot for each point
    pointDot                : false,
    // Number - Radius of each point dot in pixels
    pointDotRadius          : 4,
    // Number - Pixel width of point dot stroke
    pointDotStrokeWidth     : 1,
    // Number - amount extra to add to the radius to cater for hit detection outside the drawn point
    pointHitDetectionRadius : 20,
    // Boolean - Whether to show a stroke for datasets
    datasetStroke           : true,
    // Number - Pixel width of dataset stroke
    datasetStrokeWidth      : 2,
    // Boolean - Whether to fill the dataset with a color
    datasetFill             : true,
    // String - A legend template

    // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
    maintainAspectRatio     : true,
    // Boolean - whether to make the chart responsive to window resizing
    responsive              : true
  };
  // Create the line chart
  salesChart.Line(salesChartData, salesChartOptions);
  });
});

</script>
{% endblock %}
{% block content %}
<div class="row">
  <div class="col-xs-12">
    <div class="row">
      {% embed "partials/box.html.twig" with {'class': 'col-xs-12', 'title': 'Arbeitszeit'  } %}
          {% block content %}
            <div class="form-group">
                		<div class="input-group date" id="datetimepicker1">
                    		<input id="input_id" type="text" class="form-control">
                    		<span class="input-group-addon">
                        		<span class="glyphicon glyphicon-calendar"></span>
                    		</span>
                		</div>
             </div>

            <div class="box">
            <!-- /.box-header -->
            <div class="box-body">
              <div class="row">
                <div class="col-md-8">
                  <p class="text-center">
                    <strong id="Titleid">{{ Date|date('F Y') }} {{ employee.Fname }} </strong>
                  </p>

                  <div id="divCanvas" class="chart"><canvas id="salesChart" style="height: 300px; width: 1212px;" height="217" width="1212"></canvas></div>
                  <!-- /.chart-responsive -->
                </div>
                <!-- /.col -->
                <div class="col-md-4">
                  <p class="text-center">
                    <strong>Statistik </strong>
                  </p>
                    <!-- /.progress-group -->
                   <div class="progress-group">
                    <span class="progress-text">Arbeitszeit</span>
                    <span id="Arbeitszeitspan" class="progress-number"><b>0</b>/0</span>
                      <div class="progress sm">
                      <div id="Arbeitszeitdiv" class="progress-bar progress-bar-aqua" style="width: 80%"></div>
                    </div>
                  </div>
                <!-- /.progress-group -->
                 <div class="progress-group">
                    <span class="progress-text">Pause</span>
                    <span id="pausespan" class="progress-number"><b>0</b>/0</span>
                    <div class="progress sm">
                      <div id="pausediv" class="progress-bar progress-bar-red" style="width: 80%"></div>
                    </div>
                  </div>
                  <!-- /.progress-group -->
                  <div class="progress-group">
                    <span class="progress-text">Urlaub</span>
                    <span id="spanurlaubid" class="progress-number"><b>0</b>/0</span>
                    <div class="progress sm">
                      <div id="divurlaubid" class="progress-bar progress-bar-green" style="width: 80%"></div>
                    </div>
                  </div>
                   <!-- /.progress-group -->
                  <div class="progress-group">
                    <span class="progress-text">Krank</span>
                    <span id="spankrankid" class="progress-number"><b>0</b>/0</span>
                    <div class="progress sm">
                      <div id="divkrankid" class="progress-bar progress-bar-green bg-maroon-active " style="width: 80%"></div>
                    </div>
                  </div>
                  <!-- /.progress-group -->
                  <div class="progress-group">
                    <span class="progress-text">WochenEnde</span>
                    <span id="spanWochenEnde" class="progress-number"><b>0</b>/0</span>
                    <div class="progress sm">
                      <div id="divuWochenEnde" class="progress-bar progress-bar-yellow" style="width: 80%"></div>
                    </div>
                  </div>

                  <div class="progress-group">
                    <span class="progress-text">Feiertag</span>
                    <span id="publicHolidaysspan" class="progress-number"><b>0</b>/0</span>
                    <div class="progress sm">
                      <div id="publicHolidaysdiv" class="progress-bar progress-bar-yellow bg-purple-active" style="width: 80%"></div>
                    </div>
                  </div>
                  <!-- /.progress-group -->
                </div>
                <!-- /.col -->
              </div>
              <!-- /.row -->
            </div>
            <!-- ./box-body -->

          {% endblock %}
      {% endembed %}
    </div>
  </div>
</div>
 {% if is_granted('ROLE_ADMIN') or is_granted('ROLE_PERSONAL') %}
<div class="row">
	<div class="grid-item col-xs-12">
    	<div class="row">
			{% embed "partials/box.html.twig" with {'class': 'col-xs-12', 'title': 'Mitarbeiter wechseln' } %}
				{% block content %}
					<select class="changeEmployee form-control" onchange="location.assign('/employee/WorkingtimeEmployeeByMonth/'+$(this).val()+'/'+$('#datetimepicker1').data('DateTimePicker').date().format('YYYY-MM-DD'));">
						{% for tempEmployee in employees %}
							<option value="{{ tempEmployee.id }}"{% if tempEmployee.id == employee.id %} selected="selected"{% endif %}>{{ tempEmployee.Fname }}</option>
						{% endfor %}
					</select>
				{% endblock %}
    		{% endembed %}
    	</div>
	</div>
</div>
{% endif %}
<div class="row">
  <div class="col-xs-12">
    <div class="row">
      {% embed "partials/box.html.twig" with {'class': 'col-xs-12', 'title': 'Arbeitszeit' } %}
          {% block content %}


          <div class="table-responsive">
          <table class="table table-striped table-hover table-condensed">
            <tr>
                <td> Name:  {{ employee.Fname }} </td>  <td> {{ Date|date('F Y') }}</td>   <td>{{ "now"|date("m/d/Y") }}</td>
            </tr>
            <tr>
                <td> Nr: {{ employee.trimbleId }}</td> <td>  </td>   <td>{{ "now"|date("H:i") }}</td>
            </tr>
         </table>
         </div>

          <div class="table-responsive">
              <table id="workingdays" class="stripe row-border order-column cell-border display table table-stripe">
                  <thead>
                      <tr>
                      <th></th>
                          <th>{% trans %}Wochentag{% endtrans %}</th>
                          <th>{% trans %}FG{% endtrans %}</th>
                          <th>{% trans %}Kommentar zum Beginn{% endtrans %}</th>
                          <th>{% trans %}Kommentar zum Ende{% endtrans %}</th>
                          <th>{% trans %}Kommt(ist){% endtrans %}</th>
                          <th>{% trans %}Geht(ist){% endtrans %}</th>
                          <th>{% trans %}Kommt(soll){% endtrans %}</th>
                          <th>{% trans %}Geht(soll){% endtrans %}</th>
                          <th>{% trans %}(ist){% endtrans %}</th>
                          <th>{% trans %}Soll{% endtrans %}</th>
                          <th>{% trans %}Überstunden{% endtrans %}</th>
                          <th>{% trans %}Krank{% endtrans %}</th>
                          <th>{% trans %}Urlaub{% endtrans %}</th>
                          <th>{% trans %}Kurzarbeit{% endtrans %}</th>
                          <th>{% trans %}Schule{% endtrans %}</th>
                          <th>{% trans %}Stundenlohn{% endtrans %}</th>
                          <th>{% trans %}Überstundenv.{% endtrans %}</th>
                      </tr>
                  </thead>
                  <tbody>
                  {% for workingtime in workingtimes %}
                    {% if workingtime.beginEmployeepositionDate is empty  %}
                               {% if workingHours[workingtime.datum|date('N')-1].deletedAt is not null or workingtime.holiday != '' %}
                                <tr style="background-color: lavender;" {% if workingtime.ausgleichBereitschaft != '' %} style="background: yellow;"  {% endif %} {% if workingtime.uberstundenausgleich != '' %} style="background: #00f3ff8a;"  {% endif %} >
                                    <td>
                                    {% if workingtime.datum|date('D') == 'Sun' %}So{% endif %}
                                    {% if workingtime.datum|date('D') == 'Sat' %}Sa{% endif %}
                                    {% if workingtime.datum|date('D') == 'Mon' %}Mo{% endif %}
                                    {% if workingtime.datum|date('D') == 'Tue' %}Di{% endif %}
                                    {% if workingtime.datum|date('D') == 'Wed' %}Mi{% endif %}
                                    {% if workingtime.datum|date('D') == 'Thu' %}Do{% endif %}
                                    {% if workingtime.datum|date('D') == 'Fri' %}Fr{% endif %}
                                    </td>
                                    <td>
                                    <a href="{{ path('editEmployeeWorkingDayTable', { 'id': employee.id , 'date': workingtime.datum|date('Y-m-d')  }) }}" style="color:black"><span class="label label-danger badge"><font color="black"> <i class="fa fa-edit"> </i> {{ workingtime.datum|date('d-m-Y') }}</font></span></a>
                                    </a>
                                    </td>
                                    <td>{{ workingtime.holiday ? workingtime.holiday }}</td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td>{{ workingtime.krank ? workingtime.krank|number_format(2) : '' }}</td>
                                    <td>{{ workingtime.urlaub ? workingtime.urlaub|number_format(2) : '' }}</td>
                                    <td>{{ workingtime.kuz ? workingtime.kuz|number_format(2) : '' }}</td>
                                    <td>{{ workingtime.schule ? workingtime.schule|number_format(2) : '' }}</td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                {% else %}
                                    <tr {% if 'now'|date('Y-m-d') ==  workingtime.datum|date('Y-m-d') %}  style="background: springgreen;" {% endif %} {% if workingtime.ausgleichBereitschaft != '' %} style="background: yellow;"  {% endif %}  {% if workingtime.uberstundenausgleich != '' %} style="background: #00f3ff8a;"  {% endif %} >
                                    <td>
                                      {% if workingtime.datum|date('D') == 'Sun' %}So{% endif %}
                                      {% if workingtime.datum|date('D') == 'Sat' %}Sa{% endif %}
                                      {% if workingtime.datum|date('D') == 'Mon' %}Mo{% endif %}
                                      {% if workingtime.datum|date('D') == 'Tue' %}Di{% endif %}
                                      {% if workingtime.datum|date('D') == 'Wed' %}Mi{% endif %}
                                      {% if workingtime.datum|date('D') == 'Thu' %}Do{% endif %}
                                      {% if workingtime.datum|date('D') == 'Fri' %}Fr{% endif %}
                                    </td>
                                    <td>
                                      <a href="{{ path('editEmployeeWorkingDayTable', { 'id': employee.id , 'date': workingtime.datum|date('Y-m-d')  }) }}" style="color:black"><span class="label label-primary badge"><font color="black"> <i class="fa fa-edit"> </i> {{ workingtime.datum|date('d-m-Y') }}</font></span></a>
                                      {% if workingtime.endstatus == 1 %}
                                      <i class="fa fa-circle text-success"></i>
                                       {% if workingtime.beginstatus == 1 %}<i class="fa fa-check" aria-hidden="true"></i>{% else %}<i class="fa fa-times" aria-hidden="true"></i>{% endif %}
                                      {% endif %}
                                    </td>
                                    <td>{{ workingtime.holiday }}</td>
                                    <td></td>
                                    <td>{{ workingtime.holiday ? workingtime.holiday|number_format(2) : '' }}</td>
                                    <td>{% if workingtime.endstatus == 1 %}{{ workingtime.beginist|date('H:i:s')}}{% endif %}</td>
                                    <td></td>
                                    <td>{% if workingtime.endstatus == 1 %}{{ workingtime.begin|date('H:i:s')}}{% endif %}</td>
                                    <td></td>
                                    <td>{{ workingtime.sum_workingtime|number_format(2) }}</td>
                                    <td>{{ workingtime.HoursOfWork|number_format(2) }}</td>
                                    <td>{{  workingtime.overtimePremium|number_format(2)  }}</td>
                                    <td>{{ workingtime.krank ? workingtime.HoursOfWork|number_format(2) : '' }}</td>
                                    <td>{% if workingtime.urlaub > 0 %}{{workingtime.urlaub|number_format(2)}}{% endif %}</td>
                                    <td>{% if workingtime.kuz > 0 %}{{workingtime.kuz|number_format(2)}}{% endif %}</td>
                                    <td>{{ workingtime.schule ? workingtime.HoursOfWork|number_format(2) : '' }}</td>
                                    <td></td>
                                    <td></td>
                                </tr>
                             {% endif %}
                    {% else %}
                      <tr {% if workingHours[workingtime.datum|date('N')-1].deletedAt is not null %} style="background: darkgray;" {% endif %}{% if workingtime.ausgleichBereitschaft != '' %} style="background: yellow;"  {% endif %}  {% if workingtime.uberstundenausgleich != '' %} style="background: #00f3ff8a;"  {% endif %} >
                          <td>
                          {% if workingtime.beginEmployeepositionDate|date('D') == 'Sun' %}So{% endif %}
                          {% if workingtime.beginEmployeepositionDate|date('D') == 'Mon' %}Mo{% endif %}
                          {% if workingtime.beginEmployeepositionDate|date('D') == 'Tue' %}Di{% endif %}
                          {% if workingtime.beginEmployeepositionDate|date('D') == 'Wed' %}Mi{% endif %}
                          {% if workingtime.beginEmployeepositionDate|date('D') == 'Thu' %}Do{% endif %}
                          {% if workingtime.beginEmployeepositionDate|date('D') == 'Fri' %}Fr{% endif %}
                          {% if workingtime.beginEmployeepositionDate|date('D') == 'Sat' %}Sa{% endif %}
                           </td><td>
                            <a href="{{ path('editEmployeeWorkingDayTable', { 'id': workingtime.employeeId , 'date':workingtime.beginEmployeepositionDate|date('Y-m-d')  }) }}" style="color:black"><span class="label label-success badge"><font color="black"> <i class="fa fa-edit"> </i> {{ workingtime.beginEmployeepositionDate|date('d-m-Y') }}</font></span></a>
                           </td>
                          <td></td>
                          <td>{% if workingtime.beginEmployeepositionId.name|length > 2 %}{{ workingtime.beginEmployeepositionId.name }}{% endif %}</td>
                          <td>{% if workingtime.endEmployeepositionId and workingtime.endEmployeepositionId.name|length > 2 %}{{ workingtime.endEmployeepositionId.name }}{% endif %}</td>
                          <td {% if workingtime.newBeginEmployeepositionStatusId == 3 %}style="background-color:red"{% endif %}>{% for arrayworkingtime in workingtime.arrayworkingtimesist %} {{ arrayworkingtime.begin|date('H:i:s') }} <br>{% endfor %}</td>
                          <td {% if workingtime.newEndEmployeepositionStatusId == 3 %}style="background-color:red"{% endif %}>{% for arrayworkingtime in workingtime.arrayworkingtimesist %} {{ arrayworkingtime.end|date('H:i:s') }}<br> {% endfor %}</td>
                          <td {% if workingtime.newBeginEmployeepositionStatusId == 3 %}style="background-color:red"{% endif %}>{% for arrayworkingtime in workingtime.arrayworkingtimes %} {{ arrayworkingtime.begin|date('H:i:s') }} <br>{% endfor %}</td>
                          <td {% if workingtime.newEndEmployeepositionStatusId == 3 %}style="background-color:red"{% endif %}>{% for arrayworkingtime in workingtime.arrayworkingtimes %} {{ arrayworkingtime.end|date('H:i:s') }}<br> {% endfor %}</td>
                          <td>{{ workingtime.sum_workingtime|number_format(2) }}</td>
                          <td>{% if workingtime.urlaub and workingtime.urlaub == (workingtime.HoursOfWork/2) %}{{ (workingtime.HoursOfWork/2)|number_format(2) }} {% else %}{{ workingtime.HoursOfWork|number_format(2) }}{% endif %}</td>
                          <td>{{workingtime.overtimePremium|number_format(2)}}</td>
                          <td>{{ workingtime.krank ? workingtime.HoursOfWork|number_format(2) : '' }}</td>
                          <td> {% if workingtime.urlaub > 0  %}{{workingtime.urlaub|number_format(2)}}{% endif %}</td>
                          <td> {% if workingtime.kuz > 0  %}{{workingtime.kuz|number_format(2)}}{% endif %}</td>
                          <td></td>
                          <td>{% if workingtime.sum_workingtime|number_format(2) < workingtime.HoursOfWork|number_format(2)  %} {{ workingtime.sum_workingtime|number_format(2)  * workingHours[workingtime.beginEmployeepositionDate|date('N')-1].hourlyRate  }} {% else %} {{workingtime.HoursOfWork|number_format(2)  * workingHours[workingtime.beginEmployeepositionDate|date('N')-1].hourlyRate }} {% endif %}</td>
													<td>{% if workingtime.urlaub and workingtime.urlaub == (workingtime.HoursOfWork/2) %}{{ ((workingtime.HoursOfWork/2)|number_format(2) -(  workingtime.overtimePremium|number_format(2) ))  * (workingHours[workingtime.beginEmployeepositionDate|date('N')-1].overtimeHourlyRate)  }}{% else %}{{ ((-1) * workingtime.overtimePremium)|number_format(2)   * (workingHours[workingtime.beginEmployeepositionDate|date('N')-1].overtimeHourlyRate) }}{% endif %}</td>
                      </tr>
                      {% endif %}
                  {% endfor %}
                  </tbody>
                      <tfoot>
                         <tr>
                          <th></th>
                          <th></th>
                          <th></th>
                          <th></th>
                          <th></th>
                          <th></th>
                          <th></th>
                          <th></th>
                          <th>Summe:</th>
                          <th>{% trans %}Normal{% endtrans %}</th>
                          <th>{% trans %}Soll{% endtrans %}</th>
                          <th>{% trans %}Überstunden {% endtrans %}</th>
                          <th>{% trans %}Krank{% endtrans %}</th>
                          <th>{% trans %}Urlaub{% endtrans %}</th>
                          <th>{% trans %}Kurzarbeit{% endtrans %}</th>
                          <th>{% trans %}Schule{% endtrans %}</th>
                          <th>{% trans %}Stundenlohn{% endtrans %}</th>
													<th>{% trans %}Überstundenv{% endtrans %}</th>
                         </tr>
                     </tfoot>
              </table>
          </div>
        <!--  <a href="{{ path('contract_workingtime_new') }}" class="btn btn-success pull-right">{% trans %}Neue Arbeitszeit{% endtrans %}</a>-->
        {% if is_granted('ROLE_ADMIN') or is_granted('ROLE_PERSONAL') %}
        <a href="{{ path('indexWorkingdayManagement', {'date': Date|date('Y-m-d') } ) }}" class="btn btn-success pull-right">{% trans %}Zurück{% endtrans %}</a>
        <a href="{{ path('WorkingtimeEmployeeByMonthPrint', {'id': employee.id,'date': Date|date('Y-m-d') } ) }}" class="btn btn-primary pull-right">{% trans %}Drucken{% endtrans %}</a>
        {% else %}
         <a href="../../../../../../../../" class="btn btn-success pull-right">{% trans %}Zurück{% endtrans %}</a>
        {% endif %}
          {% endblock %}
      {% endembed %}
    </div>
  </div>
</div>
{% endblock %}
