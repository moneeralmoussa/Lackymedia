<?php
namespace EmployeeBundle\Repository;

/**
 * BreaktimeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BreaktimeRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function checkBreak($id)
    {
        $now=(new \DateTime())->format('Y-m-d');
        return $this->getEntityManager()
            ->createQuery(
                "SELECT e FROM EmployeeBundle:breaktime e WHERE e.employeeworkdayId = '".$id."' AND e.end IS NULL AND e.deletedAt IS NULL  AND e.begin LIKE '".$now."%'"
            )
            ->getOneOrNullResult();
    }
    
    public function findByEmployeeWorkingday($id)
    {
        return $this->getEntityManager()
            ->createQuery(
                "
                SELECT e FROM EmployeeBundle:breaktime e WHERE e.employeeworkdayId = '".$id."' AND e.deletedAt IS NULL ORDER BY e.id ASC
                "
            )
            ->getResult();
    }

    public function checkByDate($id,$date)
    {
        $date=$date->format('Y-m-d H:i:s');
        return $this->getEntityManager()
            ->createQuery(
                "SELECT e FROM EmployeeBundle:breaktime e WHERE e.id != '".$id."' AND e.end >= '".$date."' AND e.begin <= '".$date."' AND e.deletedAt IS NULL"
            )
            ->setMaxResults('1')
            ->getOneOrNullResult();
    }
    public function checkByDateBegin($id,$date)
    {
        $date=$date->format('Y-m-d H:i:s');
        return $this->getEntityManager()
            ->createQuery(
                "SELECT e FROM EmployeeBundle:breaktime e WHERE e.employeeworkdayId = '".$id."' AND ( e.begin <= '".$date."' OR e.end <= '".$date."' ) AND e.deletedAt IS NULL"
            )
            ->getOneOrNullResult();
    }

    public function checkByDateEnd($id,$date)
    {
        $date=$date->format('Y-m-d H:i:s');
        return $this->getEntityManager()
            ->createQuery(
                "SELECT e FROM EmployeeBundle:breaktime e WHERE e.employeeworkdayId = '".$id."' AND( e.end >= '".$date."' or e.begin >= '".$date."'  or e.end IS NULL ) AND e.deletedAt IS NULL"
            )
            ->getOneOrNullResult();
    }
}
