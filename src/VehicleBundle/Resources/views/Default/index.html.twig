{% extends 'base_new.html.twig' %}
{% set title = 'Fahrzeuge' %}

{% block javascripts %}
<script src='/assets/moment/min/moment-with-locales.min.js'></script>
<script src='/assets/fullcalendar/dist/fullcalendar.js'></script>
<script src='/assets/fullcalendar-scheduler/dist/scheduler.js'></script>
<script src='/assets/fullcalendar/dist/locale/de.js'></script>
<script src="/assets/sweetalert2/dist/sweetalert2.all.min.js"></script>
<script>
var publicHolidays = [];
function isPublicHoliday(start) {
    if(publicHolidays.indexOf(start.format("YYYY-MM-DD")) > -1) {
        return true;
    }
    if(start.day()==6 || start.day()==0) {
        return true;
    }
    return false;
}
function countAbsenceDays(start,end,noPublicHolidays=false) {
  count = 0;
  $.ajax({
      url: "{{ path('calendar_jsonpublicholidays')}}",
      async: false,
      success: function(data) {
        _.forEach(data, function(value) {
          if(value.publicHoliday == true){
            vstart = moment(value.start);
            if(!(vstart.isBefore(end) || vstart.isAfter(start))){
              count++;
            }
          }
        });
      }
  });
  var ret=0;
  ret -= count;
  while(start < end) {
      if(noPublicHolidays) {
          ret++;
      } else if(!isPublicHoliday(start)) {
          ret++;
      }
      start.add(1, 'd');
  }
  return ret;
}
$(document).ready(function() {
    var employeeID;
    var absenceID;
    var fromDate;
    var toDate;
    var cal = $('#calendar').fullCalendar({
        // defaultDate: moment(new Date()),
        resourceOrder: 'education_year',
        header: {
            left: 'today prev,next',
            center: 'title',
            right: 'timelineDay,timelineWeek,timelineMonth,timelineYear'
        },
        height: 'parent',
        themeSystem: 'bootstrap3',
        defaultView: 'timelineWeek',
        schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
        resourceGroupField: 'department',
        locale: 'de',
        displayEventTime: false,
        nowIndicator: true,
        eventOverlap:function(stillEvent, movingEvent){
            return (stillEvent.rendering && stillEvent.rendering == 'background')
        },
        businessHours: true,
        selectable: true,
        selectHelper: true,
        resourcesInitiallyExpanded: false,
        buttonText: {
          year:    'Jahr',
        },
        /*select: function(start, end, event, view, resource) {
            employeeID = resource.id;
            absenceID = event.id;
            fromDate = moment(start).toISOString()
            toDate = moment(end).toISOString();
            var days = countAbsenceDays(moment(start),moment(end));
            $('#calendar_modal_absence_add_day').val(parseFloat(days).toFixed(1));
            $('#calendar_modal_absence_add_reason').val('');
            $('#calendar_modal_absence_add_status').val('');
            $('#calendar_modal_absence_add_note').val('');
            $('#edited').text('');
            $('.modal-title').html('Abwesenheit eintragen - '+ resource.employee);
            $('.modal-subtitle').html(start.format('L') + ' - ' + end.subtract('1', 'days').format('L'));
            $('#modal').modal();
            $('#calendar').fullCalendar('unselect');
        },*/
        /*eventClick:  function(event, jsEvent, view) {
            $('#modal .delete').removeClass('hidden');
            employeeID = event.resourceId;
            absenceID = event.id;
            fromDate = moment(event.start).toISOString()
            toDate = moment(event.end).toISOString();
            $.ajax({
                type: "POST",
                url: "{{ path('calendar_ajaxgetabsence')}}",
                data: {
                    id: event.id
                },
                success: function(r){
                    employee = cal.fullCalendar( 'getResourceById', event.resourceId ).employee;
                    $('.modal-title').html(event.title + ' - ' + employee);
                    $('.modal-subtitle').html(event.start.format('L') + ' - ' + event.end.subtract('1', 'days').format('L'));
                    parseFloat($('#calendar_modal_absence_add_day').val(r['days'])).toFixed(1);
                    $('#calendar_modal_absence_add_reason').val(r['reason']);
                    $('#calendar_modal_absence_add_status').val(r['status']);
                    $('#calendar_modal_absence_add_note').val(r['note']);
                    $('#edited').text("Zuletzt bearbeitet: von "+r['approvedBy']+" am "+ moment(r['createdat']['date']).format("DD.MM.YYYY HH:mm"));
                    $('#modal').modal();
                }
            });

              $(".delete").click(function(){
                  var pid = event.id;
                  swal({
                    title: 'Abwesenheit löschen',
                    text: "Sind Sie sich sicher?",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    cancelButtonText: 'Nein',
                    confirmButtonText: 'Ja'
                  }).then((result) => {
                    if (result.value) {
                    url = '{{path('absence_delete', { 'id': 0}) }}';
                    url = url.replace("0",pid);
                    console.log(url);
                    $.ajax({
                        url: url,
                        type: 'POST',
                        data: {
                            "_method": "DELETE",
                            "form[_token]": $("#csrf_token").data("token")   // passed csrf token here
                        },
                        success: function(result) {
                          $('#modal').modal('hide');
                          swal(
                            'Gelöscht!',
                            'Diese Abwesenheit wurde gelöscht.',
                            'success'
                          )
                           cal.fullCalendar('refetchEvents');
                        },
                        error: function(e){
                          swal(
                            'Fehler!',
                            'Ein Fehler ist aufgetreten.',
                            'error'
                          )
                          console.log(e.responseText);
                        }
                    });
                  }
                  })
                });
        },*/
        /*eventDrop: function(event, delta, revertFunc) {
            employeeID = event.resourceId;
            absenceID = event.id;
            fromDate = moment(event.start).toISOString()
            toDate = moment(event.end).toISOString();
            $.ajax({
                type: "POST",
                url: "{{ path('calendar_ajaxgetabsence')}}",
                data: {
                    id: event.id
                },
                success: function(r){
                    employee = cal.fullCalendar( 'getResourceById', event.resourceId ).employee;
                    $('.modal-title').html(event.title + ' - ' + employee);
                    $('.modal-subtitle').html(event.start.format('L') + ' - ' + event.end.subtract('1', 'days').format('L'));
                    parseFloat($('#calendar_modal_absence_add_day').val(r['days'])).toFixed(1);
                    $('#calendar_modal_absence_add_reason').val(r['reason']);
                    $('#calendar_modal_absence_add_status').val(r['status']);
                    $('#calendar_modal_absence_add_note').val(r['note']);
                    $('#edited').text("Zuletzt bearbeitet: von "+r['approvedBy']+" am "+ moment(r['createdat']['date']).format("DD.MM.YYYY HH:mm"));
                    $('#modal').modal();
                    modalCountAbsenceDays();
                    / *swal({
                        text: "Bitte Anzahl der Tage anpassen!",
                        type: 'warning',
                    });* /
                }
            });
        },*/
        /*eventResize: function(event, delta, revertFunc) {
            employeeID = event.resourceId;
            absenceID = event.id;
            fromDate = moment(event.start).toISOString()
            toDate = moment(event.end).toISOString();
            $.ajax({
                type: "POST",
                url: "{{ path('calendar_ajaxgetabsence')}}",
                data: {
                    id: event.id
                },
                success: function(r){
                    employee = cal.fullCalendar( 'getResourceById', event.resourceId ).employee;
                    $('.modal-title').html(event.title + ' - ' + employee);
                    $('.modal-subtitle').html(event.start.format('L') + ' - ' + event.end.subtract('1', 'days').format('L'));
                    parseFloat($('#calendar_modal_absence_add_day').val(r['days'])).toFixed(1);
                    $('#calendar_modal_absence_add_reason').val(r['reason']);
                    $('#calendar_modal_absence_add_status').val(r['status']);
                    $('#calendar_modal_absence_add_note').val(r['note']);
                    $('#edited').text("Zuletzt bearbeitet: von "+r['approvedBy']+" am "+ moment(r['createdat']['date']).format("DD.MM.YYYY HH:mm"));
                    $('#modal').modal();
                    modalCountAbsenceDays();
                    / *swal({
                        text: "Bitte Anzahl der Tage anpassen!",
                        type: 'warning',
                    });* /
                }
            });
        },*/
        resourceRender: function(resourceObj, labelTds, bodyTds) {
            labelTds.find('.fc-cell-content').each(function(){
                if (!$(this).attr('data-listener')) {
                    $(this).on('click', function(){
                        window.location.assign('/vehicles/view/'+resourceObj.id);
                    });
                }
            });
        },
        eventRender: function(event, element, view) {
            if (event.publicHoliday) {
                publicHolidays.push(event.start.format("YYYY-MM-DD"));
            }
            if (event.icon && event.title === 'Urlaub') {
                element.css('background-color','#2ecc71');
            }
            if(event.icon){
                element.find(".fc-title").prepend("<i class='fa fa-"+event.icon+"'></i> ");
            }
        },
        viewRender: function(view,element) {
            //if (!isLoading) {
                if ($('.fc-now-indicator').position()) {
                    $($('.fc-scroller')[1]).scrollLeft($('.fc-now-indicator').position().left-100);
                }
                if ($('.fc-today').position()) {
                    $($('.fc-scroller')[1]).scrollLeft($('.fc-today').position().left-100);
                }

                $('.fc-expander').parent().on('click', function(e) {
                  // $(this).find('.fc-expander').click();
                  if (!$(e.target).is('.fc-expander')) {
                      $(this).find('.fc-expander').trigger('click');
                  }
                });

                $('.fc-day, .fc-day-top').hover(function() {
                  var myEm = $(this).attr('data-date');
                  console.log(myEm);
                      $('.fc-day-top[data-date = '+myEm+'] .fc-day-number').addClass('on-hover');
                }, function() {
                      var myEm = $(this).attr('data-date');
                  $('.fc-day-top[data-date = '+myEm+'] .fc-day-number').removeClass('on-hover');
                });

        },
        //resourceAreaWidth: "25%",
        editable: true,
        resourceColumns: [
            {
                labelText: 'Name',
                field: 'name'
            },
            {
                labelText: 'Kommentar',
                field: 'comment',
            },
        ],
        resources: {
            url: "{{ path('vehicle_json')}}",
            error: function() {
            }
        },
        eventSources: [
            {
                url: "{{ path('vehicle_load_tours')}}",
            },
            {
                url: "{{ path('calendar_jsonpublicholidays')}}",
            },
        ]
    });

    function modalCountAbsenceDays() {
        // if($('#calendar_modal_absence_add_reason').val() == 7 || $('#calendar_modal_absence_add_reason').val() == 8 || $('#calendar_modal_absence_add_reason').val() == 9) {
        //     var days = countAbsenceDays(moment(fromDate),moment(moment(toDate).toISOString()),true);
        // } else {
            var days = countAbsenceDays(moment(fromDate),moment(toDate));
        // }
        console.log(parseFloat(days).toFixed(1));
        if($('#edited').html() == '') {
            $('#calendar_modal_absence_add_day').val(parseFloat(days).toFixed(1));
        } else if ($('#calendar_modal_absence_add_day').val() == parseFloat(days).toFixed(1)) {
        } else {
            swal({
                text: "Vorschlag für Anzahl Tage: "+parseFloat(days).toFixed(1),
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Übernehmen',
                cancelButtonText: 'Ignorieren'
            }).then(function(result){
                if(result.value) {
                    $('#calendar_modal_absence_add_day').val(parseFloat(days).toFixed(1));
                }
            });
        }
    }

    $('#calendar_modal_absence_add_reason').change(function(){
        modalCountAbsenceDays();
    });

    $('.absence-add').submit(function(e) {
        e.preventDefault();
        var url = "{{ path('calendar_ajax') }}";
        var day = parseFloat($('#calendar_modal_absence_add_day').val()).toFixed(1);

        if($('#calendar_modal_absence_add_reason').val()){
            var reason = $('#calendar_modal_absence_add_reason').val();
        } else {
            swal({
                text: "Bitte wählen Sie einen Abwesenheitsgrund!",
                type: 'warning',
            });
            return false;
        }

        if($('#calendar_modal_absence_add_status').length){
            if($('#calendar_modal_absence_add_status').val()){
                var status = $('#calendar_modal_absence_add_status').val();
            } else {
                swal({
                    text: "Bitte wählen Sie einen Status!",
                    type: 'warning',
                });
                return false;
            }
        }
        var note = $('#calendar_modal_absence_add_note').val();
        var formSerialize = [];
        formSerialize.push({name: 'reason', value: reason});
        formSerialize.push({name: 'status', value: status});
        formSerialize.push({name: 'note', value: note});
        formSerialize.push({name: 'day', value: day});
        formSerialize.push({name: 'employee', value: employeeID});
        formSerialize.push({name: 'absence', value: absenceID});
        formSerialize.push({name: 'fromDate', value: fromDate});
        formSerialize.push({name: 'toDate', value: moment(toDate).toISOString()});

        $.ajax({
            type: "POST",
            url: url,
            data: formSerialize,
            success: function(r){
                $('#modal').modal('hide');
                $('#modal').on('hidden.bs.modal', function(){
                    $(this).find('form')[0].reset();
                });
                $('#calendar').fullCalendar( 'refetchEvents' );
            }
        });
    });

    /*var currentMonth = $('.fc-scroller-clip > .fc-following').first().text();
    var currentIds = [];
    $(".fc-scroller").scroll(function(){
      var month = new moment().month($('.fc-scroller-clip > .fc-following').first().text());
      if(month.format('MMMM') != currentMonth){
        currentMonth = month.format('MMMM')

        var ids = [];
        _.each($('.fc-resource-area tr[data-resource-id]'), function(value){
          ids.push($(value).data('resource-id'));
          $('.fc-head tbody th:eq(6) .fc-cell-text').html('Rest<br/>'+month.format('MMMM'));
        });

        $.ajax({
            type: "POST",
            url: "{{ path('employee_remainingmtl')}}",
            data: {
              date: month.toISOString(),
              ids:ids
            },
            success: function(resources){
              _.each(resources, function(resource){
                $('.fc-resource-area tr[data-resource-id='+resource.id+'] td:eq(6) .fc-cell-text').text(resource.remainingmtl);
              });
            }
        });

      }
    });*/

    $('#modal').on('hidden.bs.modal', function(){
        $('#modal .delete').addClass('hidden');
    });

});
</script>
{% endblock %}

{% block stylesheet %}
<link href='/assets/fullcalendar/dist/fullcalendar.css' rel='stylesheet' />
<link href='/assets/fullcalendar-scheduler/dist/scheduler.css' rel='stylesheet' />
<link href="/assets/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet">
<style>
.fc-view-container .fc-resource-area tr{
	cursor: pointer;
}
.fc-resource-area tr td:nth-child(3):hover,
.fc-resource-area tr td:nth-child(5):hover,
.fc-resource-area tr td:nth-child(6):hover {
    background: #ccc;
}
.fc-ltr .fc-resource-area tr[data-resource-id] > td:nth-last-child(2),
.fc-ltr .fc-resource-area tr[data-resource-id] > td:last-child {
    text-align: left!important;
}
.fc-ltr .fc-resource-area tr[data-resource-id] > *{
  text-align: right!important;
}
.on-hover{
    background: red;
    opacity: 0.4;
}
.fc-time-area tr:hover {
    background: rgba(0, 0, 0, 0.2);
}
.table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th, .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {
    /*border: 1px solid #ccc;*/
    border: 1px solid #000;
}
.fc-highlight{
  background: green;
}
</style>
{% endblock %}

{% block modalcontent %}
	{#% include 'CalendarBundle:Calendar:partials/modalabsenceadd.html.twig' %#}
{% endblock %}

{% block content %}
<div class="row">
  <div class="col-xs-12">
    <div class="row">
      {% embed "partials/box.html.twig" with {'class': 'col-xs-12', 'title': 'Download' } %}
          {% block content %}
            <div class='input-group date' id='datetimepicker1'>
              <input type='text' class="form-control" />
              <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
              </span>
              <span class="input-group-btn">
                 <a class="btn btn-success" href="{{ path('vehicle_loadMonthKmCsv_short') }}" onclick="this.href='{{ path('vehicle_loadMonthKmCsv_short') }}'+$('#datetimepicker1').data('DateTimePicker').date().format('YYYY-MM-DD');" target="_blank" role="button">{% trans %}Download{% endtrans %}</a>
              </span>
            </div>
          {% endblock %}
      {% endembed %}
    </div>
  </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <div class="row">
         {% embed "partials/box.html.twig" with {'class': 'col-xs-12', 'title': 'Fahrzeugliste' } %}
          {% block content %}
            <div style="height: calc(100vh - 142px);margin-top:20px;background-color: white">
                <div id="calendar"></div>
            </div>
          {% endblock %}
         {% endembed %}
        </div>
    </div>
</div>
{% endblock %}
