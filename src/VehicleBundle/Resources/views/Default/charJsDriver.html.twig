{% extends 'base_new.html.twig' %}
{% set title = 'Verbrauchsstatistik' %}

{% block content %}
	{% if consumptions %}
		<div class="row">
			<div class="col-xs-12">
				<div class="box box-danger" id="consumption">
					<div class="box-header with-border">
						<h3 class="box-title">
							Verbrauchsstatistik {{ consumptions[0].consumptionBeginTime|date('d.m.Y') }} - {{ consumptions[(consumptions|length -1)].consumptionEndTime|date('d.m.Y') }}
						</h3>
						<div class="box-tools pull-right">
							<button type="button" class="btn btn-box-tool" data-widget="collapse">
								<i class="fa fa-minus"></i>
							</button>
						</div>
					</div>
					<!-- /.box-header -->
					<div class="box-body">
						<small>Folgende Fahrzeuge sind weniger als 5KM gefahren worden und sind in der Statistik ausgenommen:
							{% for consumption in consumptions %}
								{% if consumption.vehicle and consumption.detailByLabel('Strecke-KM').value < 5 %}
									<a href="{{ path('vehicle_detail', { 'id': consumption.vehicle.id }) }}">
										L {{ consumption.vehicle.trimbleId }}
									</a>
									({% if (consumption.driver and (usr.employee.id == consumption.driver.id)) %}ich{% elseif is_granted('ROLE_ADMIN') or is_granted('ROLE_DISPOSITION') %}
										{{ consumption.driver.name }}
									{% endif %}),
								{% endif %}
							{% endfor %}
						</small>
						<div class="table-responsive">
							<table id="consumptiontable" class="table table-striped table-hover table-condensed">
								<thead style="background: rgb(205,0,1); color: #fff;">
									<tr>
										<th>{% trans %}Marke{% endtrans %}</th>
										<th>{% trans %}LKW{% endtrans %}</th>
										<th>{% trans %}Typ{% endtrans %}</th>
										<th>{% trans %}Kennz.{% endtrans %}</th>
										<th>{% trans %}Fahrer{% endtrans %}</th>
										<th>{% trans %}Datum{% endtrans %}</th>
										<th>{% trans %}Strecke{% endtrans %} km</th>
										<th>{% trans %}Verbrauch{% endtrans %} L/100 km</th>
										<th>{% trans %}Verbrauch in L{% endtrans %}</th>
										<th>{% trans %}Tempomat{% endtrans %}</th>
										<th>{% trans %}Leerlauf{% endtrans %}</th>
										<th>{% trans %}N-Antrieb{% endtrans %}</th>
										<th>{% trans %}Geschw.<span class="hidden-xs">-Ã¼berschr. </span>{% endtrans %} </th>
										<th></th>
									</tr>
								</thead>
								<tbody>
									{% include 'VehicleBundle:Default:partials/consumption_loopnew.html.twig' %}
								</tbody>
								<tfoot style="background: rgb(205,0,1); color: #fff;">
									<tr>
										<th>
											<input type="text" style="color:#000;" data-col="0" placeholder="Suche Marke" />
										</th>
										<th>
											<input type="text" style="color:#000;" data-col="1" placeholder="Suche LKW" />
										</th>
										<th>
										
										</th>
										<th>
											<input type="text" style="color:#000;" data-col="3" placeholder="Suche Kennz." />
										</th>
										<th>
											<input type="text" style="color:#000;" data-col="4" placeholder="Suche Fahrer" />
										</th>
										<th>
											<input type="text" style="color:#000;" data-col="5" placeholder="Suche Datum" />
										</th>
										<th id="route-avg" class="text-right"></th>
										<th id="consumption-avg" class="text-right"></th>
										<th id="consumption-sum" class="text-right"></th>
										<th id="cruise-control-avg" class="text-right"></th>
										<th id="neutral-avg" class="text-right"></th>
										<th id="auxiliary-drive-avg" class="text-right"></th>
										<th id="too-fast-avg" class="text-right"></th>
										<th></th>
									</tr>
								</tfoot>
							</table>
						
						</div>
					</div>
					<!-- /.box-body -->
				</div>
			</div>
			</div>
		
		
		<br>

	<div class="row">
     	<div class="col-xs-12">
          <div class="box box-solid">
            <div class="box-header">
              <i class="fa fa-bar-chart-o"></i>
              <h3 class="box-title">Verbrauchsstatistik Verbrauch beim Fahrer L/100 km: </h3>
              
            </div>
			
			<!--chartjs -->
				<div style="width:75%;"><div class="chartjs-size-monitor"><div class="chartjs-size-monitor-expand"><div class=""></div></div><div class="chartjs-size-monitor-shrink"><div class=""></div></div></div>
								<canvas id="canvas" style="display: block; width: 1428px; height: 714px;" width="1428" height="714" class="chartjs-render-monitor"></canvas>
				</div>
			<!-- end  -->
				 <!-- ./col -->
              </div>
              <!-- /.row -->
            </div>
            <!-- /.box-body -->
			</div>
          <!-- /.box -->
        </div>
        <!-- /.col -->
	 </div>

	
	{% endif %}
{% endblock %}

{% block stylesheet %}
	<link rel="stylesheet" type="text/css" href="/bundles/vehicle/css/bootstrap-datetimepicker.min.css" />
	<style>
		table.dataTable.table-condensed>thead>tr>th:nth-child(6),
		table.dataTable.table-condensed>thead>tr>th:nth-child(7),
		table.dataTable.table-condensed>thead>tr>th:nth-child(8),
		table.dataTable.table-condensed>thead>tr>th:nth-child(9),
		table.dataTable.table-condensed>thead>tr>th:nth-child(10),
		table.dataTable.table-condensed>thead>tr>th:nth-child(11),
		table.dataTable.table-condensed>thead>tr>th:nth-child(12) {
			text-align: right;
			padding-right: 5px;
			padding-left: 20px;
		}

		table.dataTable.table-condensed>thead>tr>th:nth-child(6):after,
		table.dataTable.table-condensed>thead>tr>th:nth-child(7):after,
		table.dataTable.table-condensed>thead>tr>th:nth-child(8):after,
		table.dataTable.table-condensed>thead>tr>th:nth-child(9):after,
		table.dataTable.table-condensed>thead>tr>th:nth-child(10):after,
		table.dataTable.table-condensed>thead>tr>th:nth-child(11):after,
		table.dataTable.table-condensed>thead>tr>th:nth-child(12):after,
		table.dataTable.table-condensed>thead>tr>th:last-child:after{
			opacity: 0!important;
		}

		#consumption {
			margin-bottom: 0;
		}

		.table-responsive {
			margin-bottom: 0;
		}

		thead th {
			white-space: nowrap;
		}

		#consumptiontable_wrapper div.dataTables_scrollBody {
			min-height: 300px;
		}

		{% if is_granted('ROLE_ADMIN') or is_granted('ROLE_FUEL_MODUL') or is_granted('ROLE_PERSONAL') %}
			@media only screen and (min-width: 992px) {
				#consumptiontable_wrapper div.dataTables_scrollBody {
					max-height: calc(100vh - 480px) !important;
				}
			}
		{% else %}
			@media only screen and (min-width: 992px) {
				#consumptiontable_wrapper div.dataTables_scrollBody {
					max-height: calc(100vh - 320px) !important;
				}
			}
		{% endif %}

	</style>
{% endblock %}

{% block javascripts %}
	<script src="/bundles/newApp/Chart.min.js"></script>
	<script src="/bundles/newApp/utils.js"></script>
	<script type="text/javascript" src="/bundles/vehicle/js/bootstrap-datetimepicker.min.js"></script>
	<script>
		function calcAVG() {
			$( "#consumptiontable tfoot tr:last th" ).each(function( index ) {
				if (index > 5){
					$( this ).text('');
				}
			});


			var routeavg = 0;
			var consumptionavg = 0;
			var cruisecontrolavg = 0;
			var neutralavg = 0;
			var auxiliarydriveavg = 0;
			var consumptionsum = 0;
			var toofastavg = 0;
			var rows = $("#consumptiontable").dataTable().$('tr', { "filter" : "applied" });
			// console.log(rows);
			var routeavglenght = 0;
			var consumptionavglenght = 0;
			var cruisecontrolavglenght = 0;
			var neutralavglenght = 0;
			var auxiliarydriveavglenght = 0;
			var toofastavglenght = 0;
			
			for(var i=0;i<rows.length;i++) {
				if(parseFloat($(rows[i]).find("td:eq(6) span").html()) !='0'){
				routeavg += parseFloat($(rows[i]).find("td:eq(6) span").html());
				routeavglenght++;
				}
				if(parseFloat($(rows[i]).find("td:eq(7) > span").html()) != '0' ) {
				consumptionavg += parseFloat($(rows[i]).find("td:eq(7) > span").html());
				consumptionavglenght++;
				}
				consumptionsum += parseFloat($(rows[i]).find("td:eq(8) > span").html());
				if (parseFloat($(rows[i]).find("td:eq(9) > span").html()) != '0'){
				cruisecontrolavg += parseFloat($(rows[i]).find("td:eq(9) > span").html());
				cruisecontrolavglenght++;
				}
				if(parseFloat($(rows[i]).find("td:eq(10) > span").html()) != '0'){
				neutralavg += parseFloat($(rows[i]).find("td:eq(10) > span").html());
				neutralavglenght++;
				}
				if(parseFloat($(rows[i]).find("td:eq(11) > span").html()) !='0'){
				auxiliarydriveavg += parseFloat($(rows[i]).find("td:eq(11) > span").html());
				auxiliarydriveavglenght++;
				}
				if(parseFloat($(rows[i]).find("td:eq(12) > span").html()) != '0'){
				toofastavg += parseFloat($(rows[i]).find("td:eq(12) > span").html());
				toofastavglenght++;
				}
			}

			$('.dataTables_scrollFoot #route-avg').html('&Oslash; ' + (routeavg / routeavglenght).toFixed(0));
			$('.dataTables_scrollFoot #consumption-avg').html('&Oslash; ' + (consumptionavg / consumptionavglenght).toFixed(1));
			$('.dataTables_scrollFoot #consumption-sum').html('&sum; ' + consumptionsum.toFixed(1));
			$('.dataTables_scrollFoot #cruise-control-avg').html('&Oslash; ' + (cruisecontrolavg / cruisecontrolavglenght).toFixed(1)+ '%');
		 	$('.dataTables_scrollFoot #neutral-avg').html('&Oslash; ' + (neutralavg / neutralavglenght).toFixed(1)+ '%');
			$('.dataTables_scrollFoot #auxiliary-drive-avg').html('&Oslash; ' + (auxiliarydriveavg / auxiliarydriveavglenght).toFixed(1) + '%');
			$('.dataTables_scrollFoot #too-fast-avg').html('&Oslash; ' + (toofastavg / toofastavglenght).toFixed(3));
		}

		$(document).ready(function() {
			calcAVG();
			var table = $('#consumptiontable').DataTable({
				 initComplete: function () {
            this.api().columns(2).every( function () {
                var column = this;
                var select = $('<select style="color:black"><option value=""></option></select>')
                    .appendTo( $(column.footer()).empty() )
                    .on('change', function () {
                        var val = $.fn.dataTable.util.escapeRegex(
                            $(this).val()
                        );
 
                        column
                            .search( val ? '^'+val+'$' : '', true, false )
                            .draw();
                    } );
 
                column.data().unique().sort().each( function ( d, j ) {
                    select.append( '<option value="'+d+'">'+d+'</option>' )
                } );
            } );
        },
				destroy: true,
				{% if is_granted('ROLE_ADMIN') or is_granted('ROLE_FUEL_MODUL') or is_granted('ROLE_PERSONAL') %}
					scrollY: 'calc(100vh - 520px)',
				{% else %}
					scrollY: 'calc(100vh - 380px)',
				{% endif%}
				scrollX: true,
				scrollXInner: "100%",
				scrollCollapse: true,
				paging: false,
				order: [
					[6, 'desc']
				],
				searching: true,
				info: false,
				language: {
					url: "//cdn.datatables.net/plug-ins/1.10.15/i18n/German.json"
				},
				dom: 'Bfrtip',
				buttons: {
					buttons: [{
						extend: 'print',
						text: '<i class="fa fa-print"></i> Print',
						title: $('h1').text(),
						exportOptions: {
							columns: ':not(.no-print)'
						},
						footer: true,
					}, {
						extend: 'pdfHtml5',
						text: '<i class="fa fa-file-pdf-o"></i> PDF',
						title: $('h1').text(),
						pageSize: 'A0',
						orientation: 'landscape',
						exportOptions: {
							columns: ':not(.no-print)'
						},
						footer: true
					}, {
						extend: 'copy'
					}, {
						extend: 'csv'
					}, {
						extend: 'excel'
					}],
					dom: {
						container: {
							className: 'dt-buttons'
						},
						button: {
							className: 'btn btn-default'
						}
					}
				},
			});

			table.on('search.dt',function () {
				// console.log('test');
				calcAVG();
			});

			table.footer().columns().each( function ( colIdx ) {
				$( 'input', table.column().footer() ).on('keyup change', function (){
					table.column($(this).data('col'))
					.search(this.value)
					.draw();
					calcAVG();
				});
			});

			$('#go').on('click', function() {
				reports = $( "#reports option:selected" );
				startdate_post = reports.data('startdate');
				enddate_post = reports.data('enddate');
				$.ajax({
					url: '{{ path('vehicle_ajax_consumption_statistics') }}',
					data: {
						startdate: startdate_post,
						enddate: enddate_post
					},
					type: 'POST',
				//	dataType: 'json',
			
				});
			});
		});
	</script>
	<script>
$(document).ready(function() {
  	var config = {
			type: 'line',
			data: {
				labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
				datasets: [{
					label: 'Verbrauch L',
					data: [
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor()
					],
					backgroundColor: window.chartColors.red,
					borderColor: window.chartColors.red,
					fill: false,
					borderDash: [5, 5],
					pointRadius: 15,
					pointHoverRadius: 10,
				}, {
					label: 'Strecke',
					data: [
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor()
					],
					backgroundColor: window.chartColors.blue,
					borderColor: window.chartColors.blue,
					fill: false,
					borderDash: [5, 5],
					pointRadius: [2, 4, 6, 18, 0, 12, 20],
				}, {
					label: 'geschwindigkeitsÃ¼berschreitung',
					data: [
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor()
					],
					backgroundColor: window.chartColors.green,
					borderColor: window.chartColors.green,
					fill: false,
					pointHoverRadius: 30,
				}, {
					label: 'Leerlauf',
					data: [
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor()
					],
					backgroundColor: window.chartColors.yellow,
					borderColor: window.chartColors.yellow,
					fill: false,
					pointHitRadius: 20,
				}]
			},
			options: {
				responsive: true,
				legend: {
					position: 'bottom',
				},
				hover: {
					mode: 'index'
				},
				scales: {
					xAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Month'
						}
					}],
					yAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Value'
						}
					}]
				},
				title: {
					display: true,
					text: 'Chart.js Line Chart - Different point sizes'
				}
			}
		};
		window.onload = function() {
			var ctx = document.getElementById('canvas').getContext('2d');
			window.myLine = new Chart(ctx, config);
		};
	});
</script>
{% endblock %}
